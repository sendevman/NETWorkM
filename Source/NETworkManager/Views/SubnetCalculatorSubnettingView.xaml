<UserControl x:Class="NETworkManager.Views.SubnetCalculatorSubnettingView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:validators="clr-namespace:NETworkManager.Validators"
        xmlns:converters="clr-namespace:NETworkManager.Converters"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
        xmlns:net="clr-namespace:System.Net;assembly=System.Net.IPNetwork"
        xmlns:localization="clr-namespace:NETworkManager.Resources.Localization"
        xmlns:controls="clr-namespace:NETworkManager.Controls"
        dialogs:DialogParticipation.Register="{Binding}"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:SubnetCalculatorSubnettingViewModel}">
    <UserControl.Resources>
        <converters:BigIntegerToStringConverter x:Key="BigIntegerToStringConverter" />
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:IPAddressToStringConverter x:Key="IPAddressToStringConverter" />
        <converters:ValidateSubnetCalculatorSubnettingConverter x:Key="ValidateSubnetCalculatorSubnettingConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Subnet}" />
        <Grid Grid.Row="1" Margin="0,0,0,20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource CenterTextBlock}" Text="{x:Static localization:Strings.Subnet}" />
                <ComboBox Grid.Column="2" Grid.Row="0" x:Name="ComboBoxSubnet" Height="{Binding ElementName=ComboBoxNewSubnetmaskOrCIDR, Path=ActualHeight}" ItemsSource="{Binding SubnetHistoryView}" IsEnabled="{Binding IsCalculationRunning, Converter={StaticResource BooleanReverseConverter}}" mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4IPv6Subnet}" Style="{StaticResource HistoryComboBox}">
                    <ComboBox.Text>
                        <Binding Path="Subnet" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                <validators:IPv4IPv6SubnetValidator ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.Text>
                </ComboBox>
                <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource CenterTextBlock}" Text="{x:Static localization:Strings.NewSubnetmaskOrCIDR}" />
                <ComboBox x:Name="ComboBoxNewSubnetmaskOrCIDR" Grid.Column="2" Grid.Row="2" ItemsSource="{Binding NewSubnetmaskOrCIDRHistoryView}" IsEnabled="{Binding IsCalculationRunning, Converter={StaticResource BooleanReverseConverter}}" mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4SubnetmaskIPv6CIDR}" Style="{StaticResource HistoryComboBox}">
                    <ComboBox.Text>
                        <Binding Path="NewSubnetmaskOrCIDR" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                <validators:IPv4IPv6SubnetmaskOrCIDRValidator ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.Text>
                </ComboBox>
                <Button Grid.Column="4" Grid.Row="2" Command="{Binding SubnettingCommand}" IsDefault="True" HorizontalAlignment="Right">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                            <Style.Triggers>
                                <DataTrigger Value="False">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource ValidateSubnetCalculatorSubnettingConverter}">
                                            <Binding ElementName="ComboBoxSubnet" Path="(Validation.HasError)" />
                                            <Binding ElementName="ComboBoxNewSubnetmaskOrCIDR" Path="(Validation.HasError)" />
                                            <Binding Path="Subnet" />
                                            <Binding Path="NewSubnetmaskOrCIDR" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsCalculationRunning}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="20" Height="20" Margin="10,5,0,5">
                                <Rectangle.Resources>
                                    <VisualBrush x:Key="VisualCalculator" Stretch="Uniform" Visual="{iconPacks:Material Kind=Calculator}"/>
                                </Rectangle.Resources>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="OpacityMask" Value="{StaticResource VisualCalculator}" />
                                        <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Margin="10,5" TextAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Text" Value="{x:Static localization:Strings.Calculate}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Button.Content>
                </Button>
            </Grid>
            <mahAppsControls:MetroProgressBar Grid.Row="1" Margin="0,10,0,0" Foreground="{DynamicResource AccentColorBrush}" IsIndeterminate="True">
                <mahAppsControls:MetroProgressBar.Style>
                    <Style TargetType="{x:Type  mahAppsControls:MetroProgressBar}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCalculationRunning}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </mahAppsControls:MetroProgressBar.Style>
            </mahAppsControls:MetroProgressBar>
            <TextBlock Grid.Row="2" Foreground="{DynamicResource AccentColorBrush}" Text="{Binding StatusMessage}" Visibility="{Binding DisplayStatusMessage, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Style="{DynamicResource DefaultTextBlock}" Margin="0,10,0,0" />
        </Grid>
        <TextBlock Grid.Row="2" Visibility="{Binding IsResultVisible, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Text="{x:Static localization:Strings.Result}" Style="{StaticResource HeaderTextBlock}" />
        <controls:MultiSelectDataGrid Grid.Row="3" Style="{StaticResource DefaultDataGrid}" ItemsSource="{Binding SubnetsResultsView}" Visibility="{Binding IsResultVisible, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" SelectedItem="{Binding SelectedSubnetResult}" SelectedItemsList="{Binding SelectedSubnetResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <controls:MultiSelectDataGrid.Resources>
                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static localization:Strings.CopyDots}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                        <MenuItem Header="{x:Static localization:Strings.NetworkAddress}" Command="{Binding CopySelectedNetworkAddressCommand}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.Broadcast}" Command="{Binding CopySelectedBroadcastCommand}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.IPAddresses}" Command="{Binding CopySelectedIPAddressesCommand}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.Subnetmask}" Command="{Binding CopySelectedSubnetmaskCommand}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.CIDR}" Command="{Binding CopySelectedCIDRCommand}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.FirstUsableIPAddress}" Command="{Binding CopySelectedFirstIPAddressCommand}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.LastUsableIPAddress}" Command="{Binding CopySelectedLastIPAddressCommand}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.Host}" Command="{Binding CopySelectedHostCommand}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentCopy}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{x:Static localization:Strings.ExportDots}" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <ContextMenu x:Key="MultiRowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static localization:Strings.ExportDots}" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </controls:MultiSelectDataGrid.Resources>
            <controls:MultiSelectDataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource MultiRowContextMenu}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItems.Count,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" Value="1" >
                            <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:MultiSelectDataGrid.RowStyle>
            <controls:MultiSelectDataGrid.Columns>
                <DataGridTextColumn Header="{x:Static localization:Strings.NetworkAddress}" Binding="{Binding (net:IPNetwork.Network), Converter={StaticResource IPAddressToStringConverter}}" MinWidth="150" Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Broadcast}" Binding="{Binding (net:IPNetwork.Broadcast), Converter={StaticResource IPAddressToStringConverter}}" MinWidth="150" Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.IPAddresses}" Binding="{Binding (net:IPNetwork.Total), Converter={StaticResource BigIntegerToStringConverter}}" MinWidth="150"  Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Subnetmask}" Binding="{Binding (net:IPNetwork.Netmask), Converter={StaticResource IPAddressToStringConverter}}" MinWidth="150"  Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.CIDR}" Binding="{Binding (net:IPNetwork.Cidr)}" MinWidth="80" Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.FirstUsableIPAddress}" Binding="{Binding (net:IPNetwork.FirstUsable), Converter={StaticResource IPAddressToStringConverter}}" MinWidth="150" Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.LastUsableIPAddress}" Binding="{Binding (net:IPNetwork.LastUsable), Converter={StaticResource IPAddressToStringConverter}}" MinWidth="150" Width="Auto" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Hosts}" Binding="{Binding (net:IPNetwork.Usable), Converter={StaticResource BigIntegerToStringConverter}}" MinWidth="80" Width="Auto" />
            </controls:MultiSelectDataGrid.Columns>
        </controls:MultiSelectDataGrid>
        <TextBlock Grid.Row="3" Foreground="{DynamicResource GrayBrush3}" Text="{x:Static localization:Strings.EnterSubnetAndANewSubnetmaskToCreateSubnets}" Visibility="{Binding IsResultVisible, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}" Style="{StaticResource HeaderTextBlock}" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Margin="10,0" />
    </Grid>
</UserControl>