<UserControl x:Class="NETworkManager.Views.AboutView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:resources="clr-namespace:NETworkManager.Properties"
        xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:documentation="clr-namespace:NETworkManager.Models.Documentation"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:converters="clr-namespace:NETworkManager.Converters"
        xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
        xmlns:localization="clr-namespace:NETworkManager.Resources.Localization"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:AboutViewModel}">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
    </UserControl.Resources>
    <ScrollViewer Style="{StaticResource DefaultScrollViewer}" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" HorizontalScrollBarVisibility="Disabled">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,0,0,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Grid.Row="0" Width="128" Height="128" Source="/Resources/Images/NETworkManager.ico" VerticalAlignment="Center" />
                <StackPanel Grid.Column="1" Margin="20,0,0,0">
                    <TextBlock FontSize="32" Text="{x:Static localization:StaticStrings.ProductName}" Style="{StaticResource HeaderTextBlock}" />
                    <TextBlock Text="{x:Static localization:Strings.Slogan}" Style="{DynamicResource WrapTextBlock}" Margin="0,0,0,5" />
                    <TextBlock Text="{Binding Version}" Style="{StaticResource DefaultTextBlock}" FontWeight="Bold" Margin="0,0,0,5" />
                    <TextBlock Text="{x:Static resources:Resources.NETworkManager_License}" Style="{StaticResource LinkTextBlock}" Margin="0,0,0,5">
                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding OpenWebsiteCommand}" CommandParameter="{x:Static resources:Resources.NETworkManager_LicenseUrl}" MouseAction="LeftClick" />
                        </TextBlock.InputBindings>
                    </TextBlock>
                    <TextBlock Text="Developed and maintained by GitHub.com/BornToBeRoot" Style="{StaticResource DefaultTextBlock}" Margin="0,0,0,10"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,10">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CleanButton}">
                                <Setter Property="Cursor" Value="Hand"></Setter>
                            </Style>
                        </StackPanel.Resources>
                        <Button ToolTip="{x:Static localization:Strings.ToolTip_GitHubProjectUrl}" Command="{Binding OpenWebsiteCommand}" CommandParameter="{x:Static documentation:CommunityManager.GithubUrl}">
                            <Rectangle Width="24" Height="24">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:SimpleIcons Kind=GitHub}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Button>
                        <Button ToolTip="{x:Static localization:Strings.ToolTip_TransifexProjectUrl}" Command="{Binding OpenWebsiteCommand}" CommandParameter="{x:Static documentation:CommunityManager.TransifexUrl}" Margin="10,0,0,0">
                            <Rectangle Width="24" Height="24" >
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Translate}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Button>
                        <Button ToolTip="{x:Static localization:Strings.ToolTip_TwitterContact}" Command="{Binding OpenWebsiteCommand}" CommandParameter="{x:Static documentation:CommunityManager.TwitterUrl}" Margin="10,0,0,0">
                            <Rectangle Width="24" Height="24" >
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Twitter}" />
                                </Rectangle.OpacityMask>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <TextBlock Grid.Row="1" Text="{x:Static localization:Strings.Update}" Style="{StaticResource HeaderTextBlock}"/>
            <Grid Grid.Row="2" Margin="0,0,0,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" x:Name="ButtonCheckForUpdates" HorizontalAlignment="Left" Command="{Binding CheckForUpdatesCommand}" IsEnabled="{Binding IsUpdateCheckRunning, Converter={StaticResource BooleanReverseConverter}}" Style="{StaticResource DefaultButton}" Content="{x:Static localization:Strings.CheckForUpdates}" />
                <StackPanel Grid.Column="2" Orientation="Horizontal" Visibility="{Binding UpdateAvailable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                    <StackPanel.InputBindings>
                        <MouseBinding Gesture="LeftClick" Command="{Binding OpenWebsiteCommand}" CommandParameter="{x:Static resources:Resources.NETworkManager_LatestReleaseURL}" />
                    </StackPanel.InputBindings>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource BlackColorBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Rectangle Width="16" Height="20">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Octicons Kind=DesktopDownload}"/>
                        </Rectangle.OpacityMask>
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Fill" Value="{DynamicResource BlackColorBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <TextBlock Text="{Binding UpdateText}" VerticalAlignment="Center" FontSize="14" Margin="10,0,0,0" />
                </StackPanel>
                <mahAppsControls:ProgressRing Grid.Column="2" Visibility="{Binding IsUpdateCheckRunning, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Height="{Binding ElementName=ButtonCheckForUpdates, Path=ActualHeight}" Width="{Binding ElementName=ButtonCheckForUpdates, Path=ActualHeight}" HorizontalAlignment="Left" IsActive="True" />
                <TextBlock Grid.Column="2" Text="{Binding UpdaterMessage}" Visibility="{Binding ShowUpdaterMessage, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Style="{StaticResource CenterTextBlock}" Margin="10,0,0,0" />
            </Grid>
            <TextBlock Grid.Row="3" Text="{x:Static localization:Strings.Libraries}" Style="{StaticResource HeaderTextBlock}"/>
            <DataGrid x:Name="DataGridLibaries" Grid.Row="4" ItemsSource="{Binding LibrariesView}" SelectedItem="{Binding SelectedLibraryInfo}" Margin="0,0,0,10">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                    <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                        <MenuItem Header="{x:Static localization:Strings.OpenProject}" Command="{Binding OpenWebsiteCommand}" CommandParameter="{Binding SelectedLibraryInfo.WebsiteUrl}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=OpenInNew}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.OpenLicense}" Command="{Binding OpenWebsiteCommand}" CommandParameter="{Binding SelectedLibraryInfo.LicenseUrl}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=OpenInNew}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="1" >
                                <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static localization:Strings.Name}" Binding="{Binding (documentation:LibraryInfo.Name)}" MinWidth="150" />
                    <DataGridTextColumn Header="{x:Static localization:Strings.Description}" Binding="{Binding (documentation:LibraryInfo.Description)}" MinWidth="300" Width="*" >
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="{x:Static localization:Strings.License}" Binding="{Binding (documentation:LibraryInfo.License)}" MinWidth="150" />
                </DataGrid.Columns>
            </DataGrid>
            <Button Grid.Row="5" Command="{Binding OpenLicenseFolderCommand}" HorizontalAlignment="Right" Style="{StaticResource ImageWithTextButton}" Margin="0,0,0,20">
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=FolderOpen}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.ShowLocalLicenses}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                    </Grid>
                </Button.Content>
            </Button>
            <TextBlock Grid.Row="6" Text="{x:Static localization:Strings.ExternalServices}" Style="{StaticResource HeaderTextBlock}"/>
            <DataGrid x:Name="DataGridExternalServices" Grid.Row="7" ItemsSource="{Binding ExternalServicesView}" SelectedItem="{Binding SelectedExternalServicesInfo}" Margin="0,0,0,20">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                    <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                        <MenuItem Header="{x:Static localization:Strings.OpenWebsite}" Command="{Binding OpenWebsiteCommand}" CommandParameter="{Binding SelectedExternalServicesInfo.WebsiteUrl}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=OpenInNew}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="1" >
                                <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static localization:Strings.Name}" Binding="{Binding (documentation:ExternalServicesInfo.Name)}" MinWidth="150" />
                    <DataGridTextColumn Header="{x:Static localization:Strings.Description}" Binding="{Binding (documentation:ExternalServicesInfo.Description)}" MinWidth="300" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock Grid.Row="8" Text="{x:Static localization:Strings.Resources}" Style="{StaticResource HeaderTextBlock}"/>
            <DataGrid x:Name="DataGridResources" Grid.Row="9" ItemsSource="{Binding ResourcesView}" SelectedItem="{Binding SelectedResourceInfo}">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                    <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                        <MenuItem Header="{x:Static localization:Strings.OpenWebsite}" Command="{Binding OpenWebsiteCommand}" CommandParameter="{Binding SelectedResourceInfo.WebsiteUrl}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=OpenInNew}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="1" >
                                <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static localization:Strings.Name}" Binding="{Binding (documentation:ResourceInfo.Name)}" MinWidth="150" />
                    <DataGridTextColumn Header="{x:Static localization:Strings.Description}" Binding="{Binding (documentation:ResourceInfo.Description)}" MinWidth="300" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </ScrollViewer>
</UserControl>
