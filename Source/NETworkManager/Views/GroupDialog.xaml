<UserControl x:Class="NETworkManager.Views.GroupDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:profiles="clr-namespace:NETworkManager.Profiles;assembly=NETworkManager.Profiles"
             xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:wpfHelpers="clr-namespace:NETworkManager.Utilities.WPF;assembly=NETworkManager.Utilities.WPF"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             mc:Ignorable="d" Loaded="UserControl_Loaded" d:DataContext="{d:DesignInstance viewModels:GroupViewModel}">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:RemoteDesktopAudioCaptureRedirectionModeToStringConverter x:Key="RemoteDesktopAudioCaptureRedirectionModeToStringConverter" />
        <converters:RemoteDesktopAudioRedirectionModeToStringConverter x:Key="RemoteDesktopAudioRedirectionModeToStringConverter" />
        <converters:RemoteDesktopKeyboardHookModeToStringConverter x:Key="RemoteDesktopKeyboardHookModeToStringConverter" />
        <converters:RemoteDesktopNetworkConnectionTypeToStringConverter x:Key="RemoteDesktopNetworkConnectionTypeToStringConverter" />
        <converters:GroupViewNameToTranslatedStringConverter x:Key="GroupViewNameToTranslatedStringConverter" />
        <converters:PuTTYLogModeToStringConverter x:Key="PuTTYLogModeToStringConverter" />
        <converters:StringIsNotNullOrEmptyOrIPv4AddressToBooleanConverter x:Key="StringIsNotNullOrEmptyOrIPv4AddressToBooleanConverter" />
    </UserControl.Resources>
    <Grid Margin="0,20">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border BorderThickness="0,0,1,0" BorderBrush="{DynamicResource MahApps.Brushes.Gray8}">
                <ScrollViewer ManipulationBoundaryFeedback="ScrollViewer_ManipulationBoundaryFeedback" Style="{StaticResource FadeOutScrollViewer}">
                    <ListBox x:Name="ListBoxViews" ItemsSource="{Binding GroupViews}" Margin="0,0,10,0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Width="20" Height="20" Margin="10,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{Binding Icon}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1" Text="{Binding (profiles:GroupViewInfo.Name), Converter={StaticResource GroupViewNameToTranslatedStringConverter}}" >
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Setter Property="Margin" Value="0,0,10,0" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="FontSize" Value="14" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <CheckBox Grid.Column="3">
                                        <CheckBox.Style>
                                            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DefaultCheckBox}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding (profiles:GroupViewInfo.Name)}" Value="{x:Static profiles:GroupViewName.General}">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:GroupViewInfo.Name)}" Value="{x:Static profiles:GroupViewName.RemoteDesktop}">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                        <!--  <Setter Property="IsChecked" Value="{Binding DataContext.RemoteDesktop_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" /> -->
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:GroupViewInfo.Name)}" Value="{x:Static profiles:GroupViewName.PowerShell}">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                        <!--  <Setter Property="IsChecked" Value="{Binding DataContext.PowerShell_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" /> -->
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:GroupViewInfo.Name)}" Value="{x:Static profiles:GroupViewName.PuTTY}">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                        <!--  <Setter Property="IsChecked" Value="{Binding DataContext.PuTTY_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" /> -->
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (profiles:GroupViewInfo.Name)}" Value="{x:Static profiles:GroupViewName.TigerVNC}">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                        <!-- <Setter Property="IsChecked" Value="{Binding DataContext.TigerVNC_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" /> -->
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border Background="Transparent" BorderThickness="0">
                                                <Grid MinHeight="30">
                                                    <ContentPresenter />
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <!-- BUGFIX This has to be set, to enable mouse wheel scrolling -->
                        <ListBox.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Border>
                                    <ItemsPresenter />
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <!-- /BUGFIX-->
                    </ListBox>
                </ScrollViewer>
            </Border>
            <TabControl Grid.Column="1" Margin="10" SelectedIndex="{Binding ElementName=ListBoxViews, Path=SelectedIndex}">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ProfileTabItem}" />
                </TabControl.Resources>
                <TabItem Header="{x:Static localization:Strings.General}">
                    <ScrollViewer Style="{StaticResource DefaultScrollViewer}" HorizontalScrollBarVisibility="Disabled">
                        <StackPanel>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.Name}" />
                                <TextBox x:Name="TextBoxName" GotFocus="TextBoxName_OnGotFocus" TextChanged="TextBoxName_OnTextChanged" Grid.Column="2" Grid.Row="0" mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleGroupServers}">
                                    <TextBox.Text>
                                        <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="0" ToolTip="{x:Static localization:Strings.ErrorMessage_NameIsAlreadyUsed}" Style="{StaticResource ErrorImageRectangle}" Visibility="{Binding NameIsValid, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource ErrorToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.RemoteDesktop}">
                    <ScrollViewer Style="{StaticResource DefaultScrollViewer}">
                        <StackPanel>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.UseCredentials}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="0" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_UseCredentials}" />
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Username}" />
                                <TextBox Grid.Column="2" Grid.Row="2" x:Name="TextBoxRemoteDesktopUsername" mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}" IsEnabled="{Binding RemoteDesktop_UseCredentials}" Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding Path="RemoteDesktop_Username" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Grid.Column="0" Grid.Row="4" Text="{x:Static localization:Strings.Password}" />
                                <PasswordBox Grid.Column="2" Grid.Row="4" x:Name="PasswordBoxRemoteDesktopPassword" IsEnabled="{Binding RemoteDesktop_UseCredentials}">
                                    <PasswordBox.Style>
                                        <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource DefaultPasswordBox}">
                                            <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RemoteDesktop_PasswordChanged}" Value="true">
                                                    <Setter Property="mah:TextBoxHelper.Watermark" Value="" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RemoteDesktop_IsPasswordEmpty}" Value="true">
                                                    <Setter Property="mah:TextBoxHelper.Watermark" Value="" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior Password="{Binding RemoteDesktop_Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                    <interactivity:Interaction.Triggers>
                                        <interactivity:EventTrigger EventName="PasswordChanged">
                                            <interactivity:InvokeCommandAction Command="{Binding RemoteDesktopPasswordChangedCommand}" />
                                        </interactivity:EventTrigger>
                                    </interactivity:Interaction.Triggers>
                                </PasswordBox>
                                <Rectangle Width="24" Height="24" Grid.Column="3" Grid.Row="4" ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}" Visibility="{Binding IsProfileFileEncrypted, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}" Style="{StaticResource WarnImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="4" Text="{x:Static localization:Strings.OverrideDefaultSettings}" Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0"/>
                                <Separator Grid.Column="0" Grid.Row="8" Grid.ColumnSpan="4" Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="10" VerticalAlignment="Top" Content="{x:Static localization:Strings.Display}" IsChecked="{Binding RemoteDesktop_OverrideDisplay}" Style="{StaticResource DefaultCheckBox}" />
                                <StackPanel Grid.Column="2" Grid.Row="10" IsEnabled="{Binding RemoteDesktop_OverrideDisplay}">
                                    <RadioButton x:Name="RadioButtonAdjustScreenAutomatically" Content="{x:Static localization:Strings.AdjustScreenAutomatically}" IsChecked="{Binding RemoteDesktop_AdjustScreenAutomatically}" Margin="0,0,0,10" />
                                    <RadioButton x:Name="RadioButtonUseCurrentViewSize" Content="{x:Static localization:Strings.UseCurrentViewSize}" IsChecked="{Binding RemoteDesktop_UseCurrentViewSize}" Margin="0,0,0,10" />
                                    <RadioButton x:Name="RadioButtonFixedScreenSize" Content="{x:Static localization:Strings.FixedScreenSize}" IsChecked="{Binding RemoteDesktop_UseFixedScreenSize}" Margin="0,0,0,10" />
                                    <GroupBox x:Name="GroupBoxFixedScreenSize" Style="{StaticResource WithoutHeaderGroupBox}" IsEnabled="{Binding RemoteDesktop_UseFixedScreenSize}" Margin="25,0,0,10">
                                        <StackPanel>
                                            <TextBlock Text="{x:Static localization:Strings.SelectAScreenResolution}" Style="{DynamicResource DefaultTextBlock}" Margin="0,0,0,10" />
                                            <ComboBox ItemsSource="{Binding RemoteDesktop_ScreenResolutions}" SelectedItem="{Binding RemoteDesktop_SelectedScreenResolution}" />
                                        </StackPanel>
                                    </GroupBox>
                                    <RadioButton x:Name="RadioButtonCustomScreenSize" Content="{x:Static localization:Strings.CustomScreenSize}" IsChecked="{Binding RemoteDesktop_UseCustomScreenSize}" Margin="0,0,0,10" />
                                    <GroupBox Style="{StaticResource WithoutHeaderGroupBox}" Width="{Binding ElementName=GroupBoxFixedScreenSize, Path=ActualWidth}" IsEnabled="{Binding RemoteDesktop_UseCustomScreenSize}" Margin="25,0,0,10">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static localization:Strings.Width}" Style="{StaticResource CenterTextBlock}" />
                                            <TextBox Grid.Column="2" Grid.Row="0">
                                                <TextBox.Text>
                                                    <Binding Path="RemoteDesktop_CustomScreenWidth" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:Int32Validator ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static localization:Strings.Height}" Style="{StaticResource CenterTextBlock}" />
                                            <TextBox Grid.Column="2" Grid.Row="2">
                                                <TextBox.Text>
                                                    <Binding Path="RemoteDesktop_CustomScreenHeight" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:Int32Validator ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </Grid>
                                    </GroupBox>
                                </StackPanel>
                                <CheckBox Grid.Column="0" Grid.Row="12" Content="{x:Static localization:Strings.ColorDepthBit}" IsChecked="{Binding RemoteDesktop_OverrideColorDepth}" Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="12" ItemsSource="{Binding RemoteDesktop_ColorDepths}" SelectedItem="{Binding RemoteDesktop_SelectedColorDepth}" IsEnabled="{Binding RemoteDesktop_OverrideColorDepth}"/>
                                <CheckBox Grid.Column="0" Grid.Row="14" Content="{x:Static localization:Strings.Port}" IsChecked="{Binding RemoteDesktop_OverridePort}" Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="14" x:Name="TextBoxRemoteDesktopPort" mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePort3389}" IsEnabled="{Binding RemoteDesktop_OverridePort}" Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding Path="RemoteDesktop_Port" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:PortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="16" Content="{x:Static localization:Strings.CredentialSecuritySupportProvider}" IsChecked="{Binding RemoteDesktop_OverrideCredSspSupport}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="16" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_EnableCredSspSupport}" IsEnabled="{Binding RemoteDesktop_OverrideCredSspSupport}" />
                                <CheckBox Grid.Column="0" Grid.Row="18" Content="{x:Static localization:Strings.AuthenticationLevel}" IsChecked="{Binding RemoteDesktop_OverrideAuthenticationLevel}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:NumericUpDown Grid.Column="2" Grid.Row="18" Value="{Binding RemoteDesktop_AuthenticationLevel}" Maximum="3" Minimum="0" Interval="1" IsEnabled="{Binding RemoteDesktop_OverrideAuthenticationLevel}" />
                                <Rectangle Grid.Column="3" Grid.Row="18" Width="24" Height="24" ToolTip="{x:Static localization:Strings.HelpMessage_RDPAuthenticationLevel}" Style="{StaticResource HelpImageRectangle}" Margin="10,0,0,0">
                                    <Rectangle.Resources>
                                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource HelpToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox Grid.Column="0" Grid.Row="20" Content="{x:Static localization:Strings.RemoteAudioPlayback}" IsChecked="{Binding RemoteDesktop_OverrideAudioRedirectionMode}" Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="20" ItemsSource="{Binding RemoteDesktop_AudioRedirectionModes}" SelectedItem="{Binding RemoteDesktop_AudioRedirectionMode}" IsEnabled="{Binding RemoteDesktop_OverrideAudioRedirectionMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource RemoteDesktopAudioRedirectionModeToStringConverter}}" Style="{StaticResource DefaultTextBlock}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="0" Grid.Row="22" Content="{x:Static localization:Strings.RemoteAudioRecording}" IsChecked="{Binding RemoteDesktop_OverrideAudioCaptureRedirectionMode}" Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="22" ItemsSource="{Binding RemoteDesktop_AudioCaptureRedirectionModes}" SelectedItem="{Binding RemoteDesktop_AudioCaptureRedirectionMode}" IsEnabled="{Binding RemoteDesktop_OverrideAudioCaptureRedirectionMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource RemoteDesktopAudioCaptureRedirectionModeToStringConverter}}" Style="{StaticResource DefaultTextBlock}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="0" Grid.Row="24" Content="{x:Static localization:Strings.ApplyWindowsKeyCombinations}" IsChecked="{Binding RemoteDesktop_OverrideApplyWindowsKeyCombinations}" Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="24" ItemsSource="{Binding RemoteDesktop_KeyboardHookModes}" SelectedItem="{Binding RemoteDesktop_KeyboardHookMode}" IsEnabled="{Binding RemoteDesktop_OverrideApplyWindowsKeyCombinations}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource RemoteDesktopKeyboardHookModeToStringConverter}}" Style="{StaticResource DefaultTextBlock}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="0" Grid.Row="26" Content="{x:Static localization:Strings.RedirectClipboard}" IsChecked="{Binding RemoteDesktop_OverrideRedirectClipboard}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="26" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_RedirectClipboard}" IsEnabled="{Binding RemoteDesktop_OverrideRedirectClipboard}" />
                                <CheckBox Grid.Column="0" Grid.Row="28" Content="{x:Static localization:Strings.RedirectDevices}" IsChecked="{Binding RemoteDesktop_OverrideRedirectDevices}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="28" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_RedirectDevices}" IsEnabled="{Binding RemoteDesktop_OverrideRedirectDevices}" />
                                <CheckBox Grid.Column="0" Grid.Row="30" Content="{x:Static localization:Strings.RedirectDrives}" IsChecked="{Binding RemoteDesktop_OverrideRedirectDrives}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="30" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_RedirectDrives}" IsEnabled="{Binding RemoteDesktop_OverrideRedirectDrives}"/>
                                <CheckBox Grid.Column="0" Grid.Row="32" Content="{x:Static localization:Strings.RedirectPorts}" IsChecked="{Binding RemoteDesktop_OverrideRedirectPorts}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="32" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_RedirectPorts}" IsEnabled="{Binding RemoteDesktop_OverrideRedirectPorts}" />
                                <CheckBox Grid.Column="0" Grid.Row="34" Content="{x:Static localization:Strings.RedirectSmartcards}" IsChecked="{Binding RemoteDesktop_OverrideRedirectSmartcards}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="34" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_RedirectSmartCards}" IsEnabled="{Binding RemoteDesktop_OverrideRedirectSmartcards}" />
                                <CheckBox Grid.Column="0" Grid.Row="36" Content="{x:Static localization:Strings.RedirectPrinters}" IsChecked="{Binding RemoteDesktop_OverrideRedirectPrinters}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="36" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_RedirectPrinters}" IsEnabled="{Binding RemoteDesktop_OverrideRedirectPrinters}" />
                                <CheckBox Grid.Column="0" Grid.Row="38" Content="{x:Static localization:Strings.PersistentBitmapCaching}" IsChecked="{Binding RemoteDesktop_OverridePersistentBitmapCaching}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="38" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_PersistentBitmapCaching}" IsEnabled="{Binding RemoteDesktop_OverridePersistentBitmapCaching}" />
                                <CheckBox Grid.Column="0" Grid.Row="40" Content="{x:Static localization:Strings.ReconnectIfTheConnectionIsDropped}" IsChecked="{Binding RemoteDesktop_OverrideReconnectIfTheConnectionIsDropped}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="40" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_ReconnectIfTheConnectionIsDropped}" IsEnabled="{Binding RemoteDesktop_OverrideReconnectIfTheConnectionIsDropped}" />
                                <CheckBox Grid.Column="0" Grid.Row="42" Content="{x:Static localization:Strings.NetworkConnectionType}" IsChecked="{Binding RemoteDesktop_OverrideNetworkConnectionType}" Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="42" ItemsSource="{Binding RemoteDesktop_NetworkConnectionTypes}" SelectedItem="{Binding RemoteDesktop_NetworkConnectionType}" IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource RemoteDesktopNetworkConnectionTypeToStringConverter}}" Style="{StaticResource DefaultTextBlock}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock Grid.Column="0" Grid.Row="44" Text="{x:Static localization:Strings.DesktopBackground}" Margin="24,0,0,0" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="44" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_DesktopBackground}" IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="46" Text="{x:Static localization:Strings.FontSmoothing}" Margin="24,0,0,0" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="46" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_FontSmoothing}" IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="48" Text="{x:Static localization:Strings.DesktopComposition}" Margin="24,0,0,0" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="48" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_DesktopComposition}" IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="50" Text="{x:Static localization:Strings.ShowWindowContentsWhileDragging}" Margin="24,0,0,0" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="50" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_ShowWindowContentsWhileDragging}" IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="52" Text="{x:Static localization:Strings.MenuAndWindowAnimation}" Margin="24,0,0,0" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="52" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_MenuAndWindowAnimation}" IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                                <TextBlock Grid.Column="0" Grid.Row="54" Text="{x:Static localization:Strings.VisualStyles}" Margin="24,0,0,0" Style="{StaticResource DisabledTextBlock}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="54" OffContent="" OnContent="" IsOn="{Binding RemoteDesktop_VisualStyles}" IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PowerShell}">
                    <ScrollViewer Style="{StaticResource DefaultScrollViewer}">
                        <StackPanel Margin="0,0,0,20">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Text="{x:Static localization:Strings.OverrideDefaultSettings}" Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0"/>
                                <Separator Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4" Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="4" Content="{x:Static localization:Strings.AdditionalCommandLine}" IsChecked="{Binding PowerShell_OverrideAdditionalCommandLine}" Style="{StaticResource DefaultCheckBox}" />
                                <TextBox x:Name="TextBoxAdditionalCommandLine" Grid.Column="2" Grid.Row="4" Text="{Binding PowerShell_AdditionalCommandLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding PowerShell_OverrideAdditionalCommandLine}" Style="{StaticResource DefaultTextBox}" />
                                <CheckBox Grid.Column="0" Grid.Row="6" Content="{x:Static localization:Strings.ExecutionPolicy}" IsChecked="{Binding PowerShell_OverrideExecutionPolicy}" Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox x:Name="ComboBoxTypes" Grid.Column="2" Grid.Row="6" ItemsSource="{Binding PowerShell_ExecutionPolicies}" SelectedItem="{Binding PowerShell_ExecutionPolicy}" IsEnabled="{Binding PowerShell_OverrideExecutionPolicy}" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PuTTY}">
                    <ScrollViewer Style="{StaticResource DefaultScrollViewer}" HorizontalScrollBarVisibility="Disabled">
                        <StackPanel>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Text="{x:Static localization:Strings.OverrideDefaultSettings}" Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0"/>
                                <Separator Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4" Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="4" Content="{x:Static localization:Strings.Username}" IsChecked="{Binding PuTTY_OverrideUsername}" Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="4" x:Name="TextBoxPuTTYUsername"  mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}" IsEnabled="{Binding PuTTY_OverrideUsername}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_Username" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="6" Content="{x:Static localization:Strings.PrivateKeyFile}" IsChecked="{Binding PuTTY_OverridePrivateKeyFile}" Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="6" x:Name="TextBoxPuTTYPrivateKeyFile" mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.PrivateKeyFileLocationDots}" IsEnabled="{Binding PuTTY_OverridePrivateKeyFile}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_PrivateKeyFile" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:FileExistsValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="8" Content="{x:Static localization:Strings.Profile}" IsChecked="{Binding PuTTY_OverrideProfile}" Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="8" Text="{Binding PuTTY_Profile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding PuTTY_OverrideProfile}" />
                                <CheckBox Grid.Column="0" Grid.Row="10" Content="{x:Static localization:Strings.EnableLog}" IsChecked="{Binding PuTTY_OverrideEnableLog}" Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch Grid.Column="2" Grid.Row="10" OnContent="" OffContent="" IsOn="{Binding PuTTY_EnableLog}" IsEnabled="{Binding PuTTY_OverrideEnableLog}" />
                                <CheckBox Grid.Column="0" Grid.Row="12" Content="{x:Static localization:Strings.LogMode}" IsChecked="{Binding PuTTY_OverrideLogMode}" Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox Grid.Column="2" Grid.Row="12" ItemsSource="{Binding PuTTY_LogModes}" SelectedItem="{Binding PuTTY_LogMode}" IsEnabled="{Binding PuTTY_OverrideLogMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource PuTTYLogModeToStringConverter}}" Style="{StaticResource DefaultTextBlock}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="0" Grid.Row="14" Content="{x:Static localization:Strings.LogPath}" IsChecked="{Binding PuTTY_OverrideLogPath}" Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="14" x:Name="TextBoxPuTTYLogPath" IsEnabled="{Binding PuTTY_OverrideLogPath}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_LogPath" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:DirectoryPathWithEnvironmentVariablesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="16" Content="{x:Static localization:Strings.LogFileName}" IsChecked="{Binding PuTTY_OverrideLogFileName}" Style="{StaticResource DefaultCheckBox}" />
                                <TextBox Grid.Column="2" Grid.Row="16" x:Name="TextBoxPuTTYLogFileName" IsEnabled="{Binding PuTTY_OverrideLogFileName}">
                                    <TextBox.Text>
                                        <Binding Path="PuTTY_LogFileName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:FileNameValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox Grid.Column="0" Grid.Row="18" Content="{x:Static localization:Strings.AdditionalCommandLine}" IsChecked="{Binding PuTTY_OverrideAdditionalCommandLine}" Style="{StaticResource DefaultCheckBox}"/>
                                <TextBox Grid.Column="2" Grid.Row="18" Text="{Binding PuTTY_AdditionalCommandLine}" IsEnabled="{Binding PuTTY_OverrideAdditionalCommandLine}" Style="{StaticResource DefaultTextBox}" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.TigerVNC}">
                    <ScrollViewer Style="{StaticResource DefaultScrollViewer}">
                        <StackPanel Margin="0,0,0,20">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterTextBlock}" />
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Text="{x:Static localization:Strings.OverrideDefaultSettings}" Style="{StaticResource HeaderTextBlock}" Margin="0,10,0,0"/>
                                <Separator Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4" Background="{DynamicResource MahApps.Brushes.Gray8}" Margin="0,0,0,10" />
                                <CheckBox Grid.Column="0" Grid.Row="4" Content="{x:Static localization:Strings.Port}" IsChecked="{Binding TigerVNC_OverridePort}" Style="{StaticResource DefaultCheckBox}" />
                                <TextBox x:Name="TextBoxTigerVNCPort" Grid.Column="2" Grid.Row="4" IsEnabled="{Binding TigerVNC_OverridePort}" mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePort5900}">
                                    <TextBox.Text>
                                        <Binding Path="TigerVNC_Port" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:PortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="{x:Static localization:Strings.Save}" Command="{Binding SaveCommand}" IsDefault="True" Margin="0,0,10,0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource HighlightedButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TextBoxName,Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding NameIsValid}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <!-- Remote Desktop -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True"/>
                                    <Condition Binding="{Binding RemoteDesktop_UseCredentials}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopUsername, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True"/>
                                    <Condition Binding="{Binding RemoteDesktop_UseCredentials}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_IsPasswordEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True"/>
                                    <Condition Binding="{Binding RemoteDesktop_OverridePort}" Value="True"/>
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopPort, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- PuTTY -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideUsername}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYUsername, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverridePrivateKeyFile}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYPrivateKeyFile, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideLogPath}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYLogPath, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideLogFileName}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYLogFileName, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- TigerVNC -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding TigerVNC_Enabled}" Value="True"/>
                                    <Condition Binding="{Binding ElementName=TextBoxTigerVNCPort, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="{x:Static localization:Strings.Cancel}" Command="{Binding CancelCommand}" IsCancel="True" Style="{StaticResource DefaultButton}" />
        </StackPanel>
    </Grid>
</UserControl>