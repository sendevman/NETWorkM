<UserControl x:Class="NETworkManager.Views.DNSLookupView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
        xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"        
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
        xmlns:network="clr-namespace:NETworkManager.Models.Network;assembly=NETworkManager.Models"
        xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
        xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:controls="clr-namespace:NETworkManager.Controls;assembly=NETworkManager.Controls"
        dialogs:DialogParticipation.Register="{Binding}"
        Loaded="UserControl_Loaded"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:DNSLookupViewModel}">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:DNSServerConnectionInfoProfileToString x:Key="DNSServerConnectionInfoProfileToString" />        
    </UserControl.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Query}" />
        <Grid Grid.Row="1" Margin="0,0,0,20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" 
                           Text="{x:Static localization:Strings.Host}"
                           Style="{DynamicResource DefaultTextBlock}" 
                           VerticalAlignment="Center" />
                <ComboBox Grid.Column="2" Grid.Row="0"
                          x:Name="ComboBoxHost"  
                          ItemsSource="{Binding HostHistoryView}" 
                          mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameAndOrIPAddress}"
                          IsReadOnly="{Binding IsRunning}"
                          Style="{StaticResource HistoryComboBox}">
                    <ComboBox.Text>
                        <Binding Path="Host" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.Text>
                </ComboBox>
                <TextBlock Grid.Column="4" Grid.Row="0" Text="{x:Static localization:Strings.DNSServer}" Style="{DynamicResource DefaultTextBlock}" VerticalAlignment="Center" />
                <ComboBox x:Name="ComboBoxDNSServers" Grid.Column="6" Grid.Row="0" ItemsSource="{Binding DNSServers}" SelectedItem="{Binding DNSServer}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=., Converter={StaticResource DNSServerConnectionInfoProfileToString}}" d:DataContext="{d:DesignInstance network:DNSServerConnectionInfoProfile}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Grid.Column="8" Grid.Row="0" Text="{x:Static localization:Strings.Type}" Style="{DynamicResource DefaultTextBlock}" VerticalAlignment="Center" />
                <ComboBox x:Name="ComboBoxTypes" Grid.Column="10" Grid.Row="0" ItemsSource="{Binding QueryTypes}" SelectedItem="{Binding QueryType}" Width="80" HorizontalAlignment="Left" />
                <Button Grid.Column="12" Grid.Row="0" Command="{Binding QueryCommand}" IsDefault="{Binding IsRunning, Converter={StaticResource BooleanReverseConverter}}" HorizontalAlignment="Right">
                    <Button.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=ComboBoxHost}" Value="True" >
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=ComboBoxTypes}" Value="True" >
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle>
                                <Rectangle.Resources>
                                    <VisualBrush x:Key="VisualMagnify" Stretch="Uniform" Visual="{iconPacks:Material Kind=Magnify}" />
                                </Rectangle.Resources>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}" BasedOn="{StaticResource ButtonWithImageRectangle}">
                                        <Setter Property="OpacityMask" Value="{StaticResource VisualMagnify}" />
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.Query}" Style="{StaticResource ButtonWithImageTextBlock}" />
                        </Grid>
                    </Button.Content>
                </Button>
            </Grid>
            <mah:MetroProgressBar Grid.Row="1" Margin="0,10,0,0" Foreground="{DynamicResource MahApps.Brushes.Accent}" IsIndeterminate="True">
                <mah:MetroProgressBar.Style>
                    <Style TargetType="{x:Type  mahAppsControls:MetroProgressBar}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRunning}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </mah:MetroProgressBar.Style>
            </mah:MetroProgressBar>
            <TextBlock Grid.Row="2" Foreground="{DynamicResource MahApps.Brushes.Accent}" Text="{Binding StatusMessage}" Visibility="{Binding IsStatusMessageDisplayed, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Style="{DynamicResource StatusMessageTextBlock}" Margin="0,10,0,0" />
        </Grid>
        <TextBlock Grid.Row="2" Text="{x:Static localization:Strings.Result}" Style="{StaticResource HeaderTextBlock}" />
        <controls:MultiSelectDataGrid Grid.Row="3" ItemsSource="{Binding ResultsView}" SelectedItem="{Binding SelectedResult}" SelectedItemsList="{Binding SelectedResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <controls:MultiSelectDataGrid.Resources>
                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static Member=localization:Strings.CopyDots}" 
                              Style="{StaticResource ResourceKey=CopyMenuItem}">
                        <MenuItem Header="{x:Static Member=localization:Strings.DomainName}" 
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.DomainName}" 
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.TTL}" 
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.TTL}" 
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.Class}" 
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.RecordClass}" 
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.Type}" 
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.RecordType}" 
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.Result}" 
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.Result}" 
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                    </MenuItem>
                    <MenuItem Header="{x:Static localization:Strings.ExportDots}" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <ContextMenu x:Key="MultiRowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static localization:Strings.ExportDots}" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>                
            </controls:MultiSelectDataGrid.Resources>
            <controls:MultiSelectDataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource MultiRowContextMenu}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" Value="1" >
                            <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:MultiSelectDataGrid.RowStyle>
            <controls:MultiSelectDataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True" Style="{StaticResource DefaultExpander}" d:DataContext="{d:DesignInstance network:DNSLookupRecordInfo}">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding  Path=(CollectionViewGroup.Name)}" Margin="0" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </controls:MultiSelectDataGrid.GroupStyle>
            <controls:MultiSelectDataGrid.Columns>
                <DataGridTextColumn Header="{x:Static localization:Strings.DomainName}" 
                                    Binding="{Binding Path=(network:DNSLookupRecordInfo.DomainName)}"
                                    SortMemberPath="DomainName"
                                    MinWidth="200" />
                <DataGridTextColumn Header="{x:Static localization:Strings.TTL}"
                                    Binding="{Binding Path=(network:DNSLookupRecordInfo.TTL)}"
                                    SortMemberPath="TTL"
                                    MinWidth="80" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Class}" 
                                    Binding="{Binding Path=(network:DNSLookupRecordInfo.RecordClass)}"
                                    SortMemberPath="RecordClass"
                                    MinWidth="80" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Type}" 
                                    Binding="{Binding Path=(network:DNSLookupRecordInfo.RecordType)}"
                                    SortMemberPath="RecordType"
                                    MinWidth="80" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Result}" 
                                    Binding="{Binding Path=(network:DNSLookupRecordInfo.Result)}"
                                    SortMemberPath="Result"
                                    MinWidth="200" />
            </controls:MultiSelectDataGrid.Columns>
        </controls:MultiSelectDataGrid>
    </Grid>
</UserControl>