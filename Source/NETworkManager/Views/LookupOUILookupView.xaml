<UserControl x:Class="NETworkManager.Views.LookupOUILookupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:lookup="clr-namespace:NETworkManager.Models.Lookup;assembly=NETworkManager.Models"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:controls="clr-namespace:NETworkManager.Controls;assembly=NETworkManager.Controls"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:LookupOUILookupViewModel}">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:StringNullOrEmptyToStringConverter x:Key="StringNullOrEmptyToStringConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Text="{x:Static localization:Strings.Query}" Style="{StaticResource HeaderTextBlock}" />
        <Grid Grid.Row="1" Margin="0,0,0,20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0"
                           Text="{x:Static localization:Strings.Search}"
                           Style="{DynamicResource DefaultTextBlock}"
                           VerticalAlignment="Center" />
                <ComboBox Grid.Column="2" Grid.Row="0"
                          x:Name="TextBoxSearch" ItemsSource="{Binding SearchHistoryView}"
                          mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleMACAddressesOrVendor}"
                          IsReadOnly="{Binding IsRunning}"
                          Style="{StaticResource HistoryComboBox}">
                    <ComboBox.Text>
                        <Binding Path="Search" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                <validators:ContainsTextValidator ValidatesOnTargetUpdated="True" />
                                <validators:NotEndWithSemicolonValidator ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.Text>
                </ComboBox>
                <Button Grid.Column="4" Command="{Binding OUILookupCommand}" HorizontalAlignment="Right"
                        IsDefault="{Binding IsRunning, Converter={StaticResource BooleanReverseConverter}}">
                    <Button.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding Path=(Validation.HasError), ElementName=TextBoxSearch}"
                                    Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Magnify}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.Query}"
                                       Style="{StaticResource ButtonWithImageTextBlock}" />
                        </Grid>
                    </Button.Content>
                </Button>
            </Grid>
            <mahAppsControls:MetroProgressBar Grid.Row="1" Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                              IsIndeterminate="True"
                                              Visibility="{Binding IsRunning, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                                              Margin="0,10,0,0" />
            <TextBlock Grid.Row="2" Foreground="{DynamicResource MahApps.Brushes.Accent}"
                       Text="{x:Static localization:Strings.NoVendorFoundCheckYourInput}"
                       Visibility="{Binding NothingFound, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                       Style="{DynamicResource DefaultTextBlock}" Margin="0,10,0,0" />
        </Grid>
        <TextBlock Grid.Row="2" Text="{x:Static localization:Strings.Result}" Style="{StaticResource HeaderTextBlock}" />
        <controls:MultiSelectDataGrid Grid.Row="3" ItemsSource="{Binding ResultsView}"
                                      SelectedItem="{Binding SelectedResult}"
                                      SelectedItemsList="{Binding SelectedResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <controls:MultiSelectDataGrid.Resources>
                <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static Member=localization:Strings.CopyDots}"
                              Style="{StaticResource ResourceKey=CopyMenuItem}">
                        <MenuItem Header="{x:Static Member=localization:Strings.MACAddress}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.MACAddress}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.Vendor}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.Vendor}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                    </MenuItem>
                    <MenuItem Header="{x:Static localization:Strings.ExportDots}" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <ContextMenu x:Key="MultiRowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static localization:Strings.ExportDots}" Command="{Binding ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </controls:MultiSelectDataGrid.Resources>
            <controls:MultiSelectDataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource MultiRowContextMenu}" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}"
                            Value="1">
                            <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:MultiSelectDataGrid.RowStyle>
            <controls:MultiSelectDataGrid.Columns>
                <DataGridTextColumn Header="{x:Static localization:Strings.MACAddress}"
                                    Binding="{Binding (lookup:OUIInfo.MACAddress)}"
                                    SortMemberPath="MACAddress"
                                    MinWidth="150" />
                <DataGridTextColumn Header="{x:Static localization:Strings.Vendor}"
                                    Binding="{Binding (lookup:OUIInfo.Vendor), Converter={StaticResource StringNullOrEmptyToStringConverter}}"
                                    SortMemberPath="Vendor"
                                    MinWidth="200" />
            </controls:MultiSelectDataGrid.Columns>
        </controls:MultiSelectDataGrid>
    </Grid>
</UserControl>