<UserControl x:Class="NETworkManager.Views.SettingsProfilesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:convertersOld="clr-namespace:NETworkManager.Converters"
        xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
        xmlns:validatorsOld="clr-namespace:NETworkManager.Validators"
        xmlns:validators="clr-namespace:NETworkManager.Validators;assembly=NETworkManager.Validators"
        xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"      
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:wpfHelpers="clr-namespace:NETworkManager.Utilities.WPF;assembly=NETworkManager.Utilities.WPF"
        xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
        xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
        xmlns:profiles="clr-namespace:NETworkManager.Profiles;assembly=NETworkManager.Profiles"
        dialogs:DialogParticipation.Register="{Binding}"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:SettingsProfilesViewModel}">
    <UserControl.Resources>
        <!-- Converter -->
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:IntGreater1ToBooleanConverter x:Key="IntGreater1ToBooleanConverter" />
        <convertersOld:IsDefaultProfilesLocationToBooleanConverter x:Key="IsDefaultProfilesLocationToBoolConverter" />
        <convertersOld:IsProfilesLocationToBooleanConverter x:Key="IsProfilesLocationToBooleanConverter" />        
    </UserControl.Resources>
    <StackPanel >
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Location}" />
        <TextBox x:Name="TextBoxLocation" mah:TextBoxHelper.Watermark="{x:Static localization:Strings.EnterLocationDots}" IsEnabled="{Binding IsPortable, Converter={StaticResource BooleanReverseConverter}}" Style="{StaticResource BrowseFolderTextBox}" mah:TextBoxHelper.ButtonCommand="{Binding BrowseLocationFolderCommand}" AllowDrop="True" Drop="TextBoxLocation_Drop" PreviewDragOver="TextBoxLocation_PreviewDragOver" Margin="0,0,0,10">
            <TextBox.Text>
                <Binding Path="Location" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                        <validators:SettingsFolderExistsValidator ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <StackPanel Margin="0,0,0,20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Content="{x:Static localization:Strings.Default}" Command="{Binding RestoreDefaultProfilesLocationCommand}" IsEnabled="{Binding IsPortable, Converter={StaticResource BooleanReverseConverter}}" Margin="0,0,10,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Value="False">
                                        <DataTrigger.Binding>
                                            <Binding Converter="{StaticResource IsDefaultProfilesLocationToBoolConverter}" ElementName="TextBoxLocation" Path="Text"/>
                                        </DataTrigger.Binding>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="{x:Static localization:Strings.Change}" Command="{Binding ChangeLocationCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=TextBoxLocation, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=TextBoxLocation, Path=Text, Converter={StaticResource IsProfilesLocationToBooleanConverter}}" Value="False" />
                                            <Condition Binding="{Binding MovingFiles}" Value="False" />
                                            <Condition Binding="{Binding IsPortable}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <Button Grid.Column="2" Command="{Binding OpenLocationCommand}" Style="{StaticResource ImageWithTextButton}">
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=FolderOpen}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.OpenLocation}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                        </Grid>
                    </Button.Content>
                </Button>
            </Grid>
            <Grid Visibility="{Binding IsPortable, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="0" Width="24" Height="24" Style="{StaticResource WarnImageRectangle}" />
                <TextBlock Grid.Column="2" Text="{x:Static localization:Strings.LocationCannotBeChangedInThePortableVersion}" Style="{StaticResource DefaultTextBlock}" VerticalAlignment="Center" />
            </Grid>
            <mahAppsControls:MetroProgressBar IsIndeterminate="True" Foreground="{DynamicResource AccentColorBrush}" Visibility="{Binding MovingFiles, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Margin="0,10,0,0"/>
        </StackPanel>
        <DataGrid x:Name="DataGridProfileLocations" Style="{StaticResource DefaultDataGrid}" ItemsSource="{Binding ProfileFiles}" SelectionMode="Single" SelectedItem="{Binding SelectedProfileFile}" Height="200" Margin="0,0,0,10">
            <DataGrid.Resources>
                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                <wpfHelpers:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
                <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened"  MinWidth="150">
                    <MenuItem Header="{x:Static localization:Strings.EditDots}" Command="{Binding EditProfileFileCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{x:Static localization:Strings.EncryptionDots}" Visibility="Collapsed">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=KeyVariant}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                        <MenuItem Header="{x:Static localization:Strings.EnableEncryptionDots}" Command="{Binding EnableEncryptionCommand}" Visibility="{Binding Data.SelectedProfileFile.IsEncryptionEnabled, Source={StaticResource BindingProxy}, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=KeyVariant}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.ChangeMasterPasswordDots}" Command="{Binding EditProfileFileCommand}" Visibility="{Binding Data.SelectedProfileFile.IsEncryptionEnabled, Source={StaticResource BindingProxy}, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=KeyVariant}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.DisableEncryptionDots}" Command="{Binding EditProfileFileCommand}" Visibility="{Binding Data.SelectedProfileFile.IsEncryptionEnabled, Source={StaticResource BindingProxy}, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=KeyVariant}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{x:Static localization:Strings.Delete}" Command="{Binding DeleteProfileFileCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static localization:Strings.Name}" Binding="{Binding (profiles:ProfileFileInfo.Name)}" MinWidth="150" Width="Auto" />
                <DataGridTemplateColumn Header="{x:Static localization:Strings.IsEncrypted}" Width="Auto" Visibility="Collapsed">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Rectangle Width="16" Height="16" Fill="{DynamicResource GrayBrush3}">
                                <Rectangle.Resources>
                                    <VisualBrush x:Key="VisualLockOpen" Stretch="Uniform" Visual="{iconPacks:FontAwesome Kind=UnlockSolid}"/>
                                    <VisualBrush x:Key="VisualLockClosed" Stretch="Uniform" Visual="{iconPacks:FontAwesome Kind=LockSolid}"/>
                                </Rectangle.Resources>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="OpacityMask" Value="{StaticResource VisualLockOpen}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(profiles:ProfileFileInfo.IsEncryptionEnabled)}" Value="True">
                                                <Setter Property="OpacityMask" Value="{StaticResource VisualLockClosed}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.InputBindings>
                <KeyBinding Command="{Binding EditProfileFileCommand}" Key="F2" />
                <KeyBinding Command="{Binding DeleteProfileFileCommand}" Key="Delete" />
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"     />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="1" >
                            <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,10">
            <Button Command="{Binding DeleteProfileFileCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=DataGridProfileLocations, Path=SelectedItems.Count}" Value="1">
                                <DataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.DeleteDots}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                    </Grid>
                </Button.Content>
            </Button>
            <Button Command="{Binding EditProfileFileCommand}" Margin="10,0,0,0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=DataGridProfileLocations, Path=SelectedItems.Count}" Value="1" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.EditDots}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                    </Grid>
                </Button.Content>
            </Button>
            <Button Command="{Binding AddProfileFileCommand}" Style="{StaticResource ImageWithTextButton}" Margin="10,0,0,0">
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.AddDots}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                    </Grid>
                </Button.Content>
            </Button>
        </StackPanel>
        <!--
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Import}" />
        <TextBox x:Name="TextBoxImportFilePath" mah:TextBoxHelper.Watermark="{x:Static localization:Strings.LocationOfTheImport}" Style="{StaticResource BrowseFolderTextBox}" mah:TextBoxHelper.ButtonCommand="{Binding BrowseImportFileCommand}" AllowDrop="True" Drop="TextBoxImportFilePath_Drop" PreviewDragOver="TextBoxImportFilePath_PreviewDragOver" Margin="0,0,0,10">
            <TextBox.Text>
                <Binding Path="ImportFilePath" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                        <validators:FileExistsValidator ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <StackPanel Margin="0,0,0,20">
            <Button Content="{x:Static localization:Strings.Import}" Command="{Binding ImportSettingsCommand}" HorizontalAlignment="Left" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TextBoxImportFilePath, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBlock Foreground="{DynamicResource AccentColorBrush}" Text="{Binding ImportStatusMessage}" Visibility="{Binding DisplayImportStatusMessage, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Style="{DynamicResource DefaultTextBlock}" Margin="0,10,0,0" />
        </StackPanel>
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Export}" />
        <StackPanel Margin="0,0,0,20">
            <Button Content="{x:Static localization:Strings.Export}" Command="{Binding ExportSettingsCommand}" IsEnabled="{Binding SettingsExists}" HorizontalAlignment="Left"  />
            <TextBlock Foreground="{DynamicResource AccentColorBrush}" Text="{Binding ExportStatusMessage}" Visibility="{Binding DisplayExportStatusMessage, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Style="{DynamicResource DefaultTextBlock}" Margin="0,10,0,0" />
        </StackPanel>
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Reset}" />
        <TextBlock Style="{StaticResource DefaultTextBlock}" Text="{x:Static localization:Strings.ThisWillResetAllSettings}" Margin="0,0,0,10" />
        <Button Content="{x:Static localization:Strings.Reset}" Command="{Binding ResetSettingsCommand}" IsEnabled="{Binding SettingsExists}" HorizontalAlignment="Left" />
        -->
    </StackPanel>
</UserControl>

