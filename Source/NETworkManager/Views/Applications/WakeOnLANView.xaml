<UserControl x:Class="NETworkManager.Views.Applications.WakeOnLANView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"          
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"   
             xmlns:Validator="clr-namespace:NETworkManager.Validators"
             xmlns:Converter="clr-namespace:NETworkManager.Converters"
             xmlns:Control="clr-namespace:NETworkManager.Controls"
             xmlns:IconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Converter:SelectedItemsToBoolConverter x:Key="SelectedItemsToBoolConverter" />
    </UserControl.Resources>
    <TabControl Style="{StaticResource DefaultTabControl}">
        <!-- Wake Up -->
        <TabItem Header="{DynamicResource String_Header_WakeUp}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Width="450" HorizontalAlignment="Left" Margin="0,0,0,20">
                    <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{DynamicResource String_Header_Destination}" />
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource CenterTextBlock}" Text="{DynamicResource String_MACAddress}" />
                        <ComboBox Grid.Column="1" Grid.Row="0" x:Name="cbMACAddress" mah:TextBoxHelper.Watermark="{DynamicResource String_Watermark_ExampleMACAddress}" ItemsSource="{Binding WakeOnLANTemplates}" SelectedValuePath="MACAddress" FontSize="14" SelectedItem="{Binding SelectedWakeOnLANTemplate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditableComboBox}">
                            <ComboBox.InputBindings>
                                <KeyBinding Command="{Binding WakeUpCommand}" Key="Return" />
                            </ComboBox.InputBindings>
                            <ComboBox.Text>
                                <Binding Path="MACAddress" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <Validator:EmptyFieldValidator ValidatesOnTargetUpdated="True" />
                                        <Validator:MACAddressValidator ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.Text>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="150" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" VerticalAlignment="Center" FontSize="14" FontFamily="Consolas" Text="{Binding MACAddress}" />
                                        <TextBlock Grid.Column="1" VerticalAlignment="Center" FontSize="14" Text="{Binding Hostname}" Foreground="{DynamicResource GrayBrush3}" />
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="{DynamicResource String_Broadcast}" Style="{StaticResource CenterTextBlock}" />
                        <TextBox x:Name="txtBroadcast" Grid.Column="1" Grid.Row="2" mah:TextBoxHelper.Watermark="{DynamicResource String_Watermark_ExampleBroadcast}" Style="{StaticResource DefaultTextBox}" Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding WakeUpCommand}" Key="Return" />
                            </TextBox.InputBindings>
                            <TextBox.Text>
                                <Binding Path="Broadcast" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <Validator:EmptyFieldValidator ValidatesOnTargetUpdated="True" />
                                        <Validator:IPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock Grid.Column="0" Grid.Row="4" Text="{DynamicResource String_Port}" Style="{StaticResource CenterTextBlock}" />
                        <TextBox x:Name="txtPort" Grid.Column="1" Grid.Row="4" mah:TextBoxHelper.Watermark="{DynamicResource String_Watermark_ExamplePort}" Style="{StaticResource DefaultTextBox}" HorizontalAlignment="Left" Width="65" Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding WakeUpCommand}" Key="Return" />
                            </TextBox.InputBindings>
                            <TextBox.Text>
                                <Binding Path="Port" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <Validator:EmptyFieldValidator ValidatesOnTargetUpdated="True" />
                                        <Validator:PortValidator ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Command="{Binding AddTemplateCommand}" HorizontalAlignment="Right" ToolTip="{DynamicResource String_ToolTip_AddTemplate}" Margin="0,0,10,0">
                            <Button.Content>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{IconPacks:PackIconMaterial Kind=Plus}"/>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1" Text="{DynamicResource String_Button_AddTemplate}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                                </Grid>
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ImageWithTextButton}" >
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=cbMACAddress}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtBroadcast}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtPort}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button HorizontalAlignment="Right"  Command="{Binding WakeUpCommand}">
                            <Button.Content>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{IconPacks:PackIconMaterial Kind=Power}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1" Text="{DynamicResource String_Button_WakeUp}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                                </Grid>
                            </Button.Content>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}" >
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=cbMACAddress}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtBroadcast}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtPort}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <TextBlock Grid.Row="1" Style="{StaticResource HeaderTextBlock}" Text="{DynamicResource String_Header_Templates}" />
                <Control:MultiSelectDataGrid Grid.Row="2" Style="{StaticResource MetroDataGrid}" FontSize="14" ItemsSource="{Binding WakeOnLANTemplates}" AutoGenerateColumns="False" GridLinesVisibility="Vertical" IsReadOnly="True" SelectionMode="Extended" SelectionUnit="FullRow" SelectedItemsList="{Binding SelectedWakeOnLANTemplates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{DynamicResource GrayBrush3}" Margin="0,0,0,10">
                    <Control:MultiSelectDataGrid.Columns>
                        <DataGridTextColumn Header="{DynamicResource String_MACAddress}" Binding="{Binding MACAddress}" Width="150" />
                        <DataGridTextColumn Header="{DynamicResource String_Hostname}" Binding="{Binding Hostname}" Width="150" />
                        <DataGridTextColumn Header="{DynamicResource String_Broadcast}" Binding="{Binding Broadcast}" Width="150"/>
                        <DataGridTextColumn Header="{DynamicResource String_Port}" Binding="{Binding Port}" Width="*"/>
                    </Control:MultiSelectDataGrid.Columns>
                    <Control:MultiSelectDataGrid.Resources>
                        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                        <ContextMenu x:Key="ContextMenuDataGridRow" Opened="ContextMenu_Opened" MinWidth="150">
                            <MenuItem Header="{DynamicResource String_WakeUp}" Command="{Binding WakeUpSelectedWakeOnLANTemplatesCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{IconPacks:PackIconMaterial Kind=Power}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource String_Delete}" Command="{Binding DeleteSelectedWakeOnLANTemplatesCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{IconPacks:PackIconMaterialLight Kind=Delete}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Control:MultiSelectDataGrid.Resources>
                    <Control:MultiSelectDataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                            <Setter Property="ContextMenu" Value="{StaticResource ContextMenuDataGridRow}" />
                        </Style>
                    </Control:MultiSelectDataGrid.RowStyle>
                    <Control:MultiSelectDataGrid.InputBindings>
                        <KeyBinding Command="{Binding DeleteSelectedWakeOnLANTemplatesCommand}" Key="Delete" />
                    </Control:MultiSelectDataGrid.InputBindings>
                </Control:MultiSelectDataGrid>
                <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Command="{Binding DeleteSelectedWakeOnLANTemplatesCommand}"  Margin="0,0,10,0">
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{IconPacks:PackIconMaterialLight Kind=Delete}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{DynamicResource String_Button_Delete}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                            </Grid>
                        </Button.Content>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedWakeOnLANTemplates, Converter={StaticResource SelectedItemsToBoolConverter}}" Value="True" >
                                        <Setter Property="IsEnabled"  Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Command="{Binding WakeUpSelectedWakeOnLANTemplatesCommand}" HorizontalAlignment="Right" >
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{IconPacks:PackIconMaterial Kind=Power}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{DynamicResource String_Button_WakeUp}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                            </Grid>
                        </Button.Content>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedWakeOnLANTemplates, Converter={StaticResource SelectedItemsToBoolConverter}}" Value="True" >
                                        <Setter Property="IsEnabled"  Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>