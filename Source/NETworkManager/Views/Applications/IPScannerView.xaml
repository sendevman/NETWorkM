<UserControl x:Class="NETworkManager.Views.Applications.IPScannerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Converter="clr-namespace:NETworkManager.Converters"
        xmlns:WpfHelper="clr-namespace:NETworkManager.WpfHelper"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"        
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:Validator="clr-namespace:NETworkManager.Validators"
        xmlns:Control="clr-namespace:NETworkManager.Controls"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Dialog:DialogParticipation.Register="{Binding}"
        mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Converter:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <Converter:IntToStringConverter x:Key="IntToStringConverter" />
        <Converter:IPStatusToStringConverter x:Key="IPStatusToStringConverter" />
        <Converter:PingTimeToStringConverter x:Key="PingTimeToStringConverter" />
        <Converter:PhysicalAddressToStringConverter x:Key="PhysicalAddressToStringConverter" />
    </UserControl.Resources>
    <TabControl Style="{StaticResource DefaultTabControl}">
        <TabItem Header="{DynamicResource String_Header_IPScanner}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_IPRange}" />
                <Grid Grid.Row="1" Margin="0,0,0,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>         
                    <ComboBox Grid.Column="0" x:Name="txtIPRange" ItemsSource="{Binding IPRangeHistory}" mah:TextBoxHelper.Watermark="{DynamicResource String_Watermark_EampleIPScanRange}" Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}" IsEnabled="{Binding IsScanRunning, Converter={StaticResource BooleanReverseConverter}}" Style="{StaticResource HistoryComboBox}">
                        <ComboBox.Text>
                            <Binding Path="IPRange" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <Validator:EmptyFieldValidator ValidatesOnTargetUpdated="True" />
                                    <Validator:IPScanRangeValidator ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.Text>
                    </ComboBox>
                    <Button Grid.Column="1" Command="{Binding ScanCommand}" IsDefault="{Binding IsScanRunning, Converter={StaticResource BooleanReverseConverter}}" IsCancel="{Binding IsScanRunning}" HorizontalAlignment="Right" Margin="10,0,0,0">
                        <Button.Resources>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=txtIPRange}" Value="True" >
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CancelScan}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border BorderThickness="0,0,1,0">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}},Path=IsEnabled}" Value="False" >
                                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Rectangle Width="20" Height="20" Margin="10,5">
                                        <Rectangle.Resources>
                                            <VisualBrush x:Key="VisualControlPlay" Visual="{StaticResource appbar_control_play}" />
                                            <VisualBrush x:Key="VisualClose" Visual="{StaticResource appbar_close}" />
                                        </Rectangle.Resources>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="OpacityMask" Value="{StaticResource VisualControlPlay}" />
                                                <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}},Path=IsEnabled}" Value="False" >
                                                        <Setter Property="Fill" Value="{DynamicResource AccentColorBrush3}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsScanRunning}" Value="True">
                                                        <Setter Property="OpacityMask" Value="{StaticResource VisualClose}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </Border>
                                <TextBlock Grid.Column="1" FontSize="14" Margin="10,5" TextAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Text" Value="{DynamicResource String_Button_Scan}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsScanRunning}" Value="True" >
                                                    <Setter Property="Text" Value="{DynamicResource String_Button_Cancel}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Button.Content>
                    </Button>
                </Grid>
                <StackPanel Grid.Row="2" Margin="0,0,0,20">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsScanRunning}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>                    
                    <Controls:MetroProgressBar Maximum="{Binding ProgressBarMaximum}" Foreground="{DynamicResource AccentColorBrush}"  Value="{Binding ProgressBarValue}">
                        <Controls:MetroProgressBar.Style>
                            <Style TargetType="{x:Type Controls:MetroProgressBar}" >
                                <Setter Property="IsIndeterminate" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PreparingScan}" Value="True">
                                        <Setter Property="IsIndeterminate" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CancelScan}" Value="True">
                                        <Setter Property="IsIndeterminate" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Controls:MetroProgressBar.Style>
                    </Controls:MetroProgressBar>
                    <TextBlock HorizontalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlock}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PreparingScan}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CancelScan}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} / {1} ">
                                <Binding Path="ProgressBarValue" />
                                <Binding Path="ProgressBarMaximum" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
                <TextBlock Grid.Row="3" Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Result}" />
                <Control:ScrollingDataGrid Grid.Row="4" Style="{StaticResource MetroDataGrid}" FontSize="14" mah:ControlsHelper.ContentCharacterCasing="Normal" ItemsSource="{Binding IPScanResult}" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="false" IsReadOnly="True" >
                    <Control:ScrollingDataGrid.Resources>
                        <WpfHelper:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
                    </Control:ScrollingDataGrid.Resources>
                    <Control:ScrollingDataGrid.Columns>
                        <DataGridTextColumn Header="{DynamicResource String_IPAddress}" Binding="{Binding PingInfo.IPAddress}" Width="150" />
                        <DataGridTextColumn Header="{DynamicResource String_Hostname}" Binding="{Binding Hostname}" Visibility="{Binding Data.ResolveHostname, Source={StaticResource BindingProxy},Converter={StaticResource BooleanToVisibilityConverter}}" Width="200" />
                        <DataGridTextColumn Header="{DynamicResource String_MACAddress}" Binding="{Binding MACAddress, Converter={StaticResource PhysicalAddressToStringConverter}}" Visibility="{Binding Data.ResolveMACAddress, Source={StaticResource BindingProxy},Converter={StaticResource BooleanToVisibilityConverter}}" Width="150" />
                        <DataGridTextColumn Header="{DynamicResource String_Bytes}" Binding="{Binding PingInfo.Bytes, Converter={StaticResource IntToStringConverter}}" Width="80" />
                        <DataGridTextColumn Header="{DynamicResource String_Time}" Width="100">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource PingTimeToStringConverter}">
                                    <Binding Path="PingInfo.Status" />
                                    <Binding Path="PingInfo.Time" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{DynamicResource String_TTL}" Binding="{Binding PingInfo.TTL, Converter={StaticResource IntToStringConverter}}" Width="80"/>
                        <DataGridTextColumn Header="{DynamicResource String_Status}" Binding="{Binding PingInfo.Status, Converter={StaticResource IPStatusToStringConverter}}" Width="*" />
                    </Control:ScrollingDataGrid.Columns>
                </Control:ScrollingDataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="{DynamicResource String_Header_Settings}">
            <ScrollViewer Style="{StaticResource DefaultScrollViewer}">
                <ScrollViewer.Resources>
                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollViewerScrollBar}" />
                </ScrollViewer.Resources>
                <StackPanel>               
                    <TextBlock Text="{DynamicResource String_Header_Multithreading}" Style="{StaticResource DefaultTextBlockStyle}" />
                    <TextBlock  Text="{DynamicResource String_Threads}" Style="{StaticResource DefaultTextBlock}" Margin="0,0,0,10" />
                    <mah:NumericUpDown Value="{Binding Threads}" Maximum="10000" Minimum="1" Interval="1" Margin="0,0,0,20" />
                    <TextBlock Text="{DynamicResource String_Header_Ping}" Style="{StaticResource DefaultTextBlockStyle}" />
                    <TextBlock  Text="{DynamicResource String_Timeout}" Style="{StaticResource DefaultTextBlock}" Margin="0,0,0,10" />
                    <mah:NumericUpDown  Value="{Binding Timeout}" Maximum="10000" Minimum="100" Interval="100" Margin="0,0,0,10" />
                    <TextBlock Text="{DynamicResource String_Buffer}" Style="{StaticResource DefaultTextBlock}" Margin="0,0,0,10" />
                    <mah:NumericUpDown  Value="{Binding Buffer}" Minimum="1" Maximum="65535" Interval="1" Margin="0,0,0,10" />
                    <TextBlock  Text="{DynamicResource String_Attempts}" Style="{StaticResource DefaultTextBlock}" Margin="0,0,0,10" />
                    <mah:NumericUpDown Value="{Binding Attempts}" Maximum="10" Minimum="1" Interval="1" Margin="0,0,0,20" />
                    <TextBlock Text="{DynamicResource String_Header_DNS}" Style="{StaticResource DefaultTextBlockStyle}" />
                    <mah:ToggleSwitch Header="{DynamicResource String_ResolveHostname}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding ResolveHostname}" Margin="0,0,0,20"/>
                    <TextBlock Text="{DynamicResource String_Header_ARP}" Style="{StaticResource DefaultTextBlockStyle}" />
                    <mah:ToggleSwitch Header="{DynamicResource String_ReadTheMACAddressFromTheArpCache}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding ResolveMACAddress}" />                    
                </StackPanel>
            </ScrollViewer>
        </TabItem>
    </TabControl>
</UserControl>
