<UserControl x:Class="NETworkManager.Views.Applications.LookupView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Validator="clr-namespace:NETworkManager.Validators"
        xmlns:Converter="clr-namespace:NETworkManager.Converters"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"        
        xmlns:Control="clr-namespace:NETworkManager.Controls"
        xmlns:IconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"             
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        mc:Ignorable="d">
    <UserControl.Resources>
        <Converter:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <Converter:NullOrEmptyToStringConverter x:Key="NullOrEmptyToStringConverter" />
    </UserControl.Resources>
    <TabControl Style="{StaticResource DefaultTabControl}">
        <TabItem Header="{DynamicResource String_Header_OUILookup}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}" Text="{DynamicResource String_Header_MACAddress}" />
                <Grid Grid.Row="1" Margin="0,0,0,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox Grid.Column="0" x:Name="txtMACAddressOrFirst3Bytes" ItemsSource="{Binding MACAddressHistory}" mah:TextBoxHelper.Watermark="{DynamicResource String_Watermark_ExampleMACAddressesOrParts}" Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}" IsEnabled="{Binding IsOUILookupRunning, Converter={StaticResource BooleanReverseConverter}}" Style="{StaticResource HistoryComboBox}">
                        <ComboBox.InputBindings>
                            <KeyBinding Command="{Binding OUILookupCommand}" Key="Return" />
                        </ComboBox.InputBindings>
                        <ComboBox.Text>
                            <Binding Path="MACAddress" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <Validator:EmptyFieldValidator ValidatesOnTargetUpdated="True" />
                                    <Validator:MACAddressAndMACAddressFirst3BytesRangeValidator ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.Text>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="Width" Value="{Binding ActualWidth,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                    <Button Grid.Column="1" Command="{Binding OUILookupCommand}" HorizontalAlignment="Right" Margin="10,0,0,0">
                        <Button.Resources>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=txtMACAddressOrFirst3Bytes}" Value="True" >
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Margin="10,5,0,5">
                                    <Rectangle.Resources>
                                        <VisualBrush x:Key="VisualMagnify" Stretch="Uniform" Visual="{IconPacks:PackIconMaterial Kind=Magnify}" />
                                        <VisualBrush x:Key="VisualClose" Stretch="Uniform" Visual="{IconPacks:PackIconMaterial Kind=Close}" />
                                    </Rectangle.Resources>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="OpacityMask" Value="{StaticResource VisualMagnify}" />
                                            <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsOUILookupRunning}" Value="True">
                                                    <Setter Property="OpacityMask" Value="{StaticResource VisualClose}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Grid.Column="1" FontSize="14" Margin="10,5" TextAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Text" Value="{DynamicResource String_Button_Lookup}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsOUILookupRunning}" Value="True" >
                                                    <Setter Property="Text" Value="{DynamicResource String_Button_Cancel}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Button.Content>
                    </Button>
                </Grid>
                <StackPanel Grid.Row="2" Margin="0,0,0,20">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type  StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsOUILookupRunning}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Controls:MetroProgressBar Foreground="{DynamicResource AccentColorBrush}" IsIndeterminate="True"/>
                </StackPanel>
                <TextBlock Grid.Row="3" Text="{DynamicResource String_Header_Result}" Style="{StaticResource HeaderTextBlock}" />
                <DataGrid Grid.Row="4" Style="{StaticResource MetroDataGrid}" FontSize="14" mah:ControlsHelper.ContentCharacterCasing="Normal" ItemsSource="{Binding OUILookupResult}" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{DynamicResource String_MACAddress}" Binding="{Binding MACAddress}" Width="150" />
                        <DataGridTextColumn Header="{DynamicResource String_Vendor}" Binding="{Binding Vendor, Converter={StaticResource NullOrEmptyToStringConverter}}" Width="*" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="{DynamicResource String_Header_PortLookup}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}" Text="{DynamicResource String_Header_Port}" />
                <Grid Grid.Row="1" Margin="0,0,0,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox Grid.Column="0" x:Name="txtPorts" ItemsSource="{Binding PortsHistory}" mah:TextBoxHelper.Watermark="{DynamicResource String_Watermark_EamplePortScanRange}" Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}" IsEnabled="{Binding IsPortLookupRunning, Converter={StaticResource BooleanReverseConverter}}" Style="{StaticResource HistoryComboBox}">
                        <ComboBox.InputBindings>
                            <KeyBinding Command="{Binding PortLookupCommand}" Key="Return" />
                        </ComboBox.InputBindings>
                        <ComboBox.Text>
                            <Binding Path="Ports" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <Validator:EmptyFieldValidator ValidatesOnTargetUpdated="True" />
                                    <Validator:PortRangeValidator ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.Text>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="Width" Value="{Binding ActualWidth,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                    <Button Grid.Column="1" Command="{Binding PortLookupCommand}" HorizontalAlignment="Right" Margin="10,0,0,0">
                        <Button.Resources>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=txtPorts}" Value="True" >
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Margin="10,5,0,5">
                                    <Rectangle.Resources>
                                        <VisualBrush x:Key="VisualMagnify" Stretch="Uniform" Visual="{IconPacks:PackIconMaterial Kind=Magnify}" />
                                        <VisualBrush x:Key="VisualClose" Stretch="Uniform" Visual="{IconPacks:PackIconMaterial Kind=Close}" />
                                    </Rectangle.Resources>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="OpacityMask" Value="{StaticResource VisualMagnify}" />
                                            <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPortLookupRunning}" Value="True">
                                                    <Setter Property="OpacityMask" Value="{StaticResource VisualClose}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Grid.Column="1" FontSize="14" Margin="10,5" TextAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Text" Value="{DynamicResource String_Button_Lookup}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPortLookupRunning}" Value="True" >
                                                    <Setter Property="Text" Value="{DynamicResource String_Button_Cancel}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Button.Content>
                    </Button>
                </Grid>
                <StackPanel Grid.Row="2" Margin="0,0,0,20">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type  StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPortLookupRunning}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Controls:MetroProgressBar Foreground="{DynamicResource AccentColorBrush}" IsIndeterminate="True"/>
                </StackPanel>
                <TextBlock Grid.Row="3" Text="{DynamicResource String_Header_Result}" Style="{StaticResource HeaderTextBlock}" />
                <DataGrid Grid.Row="4" Style="{StaticResource MetroDataGrid}" FontSize="14" mah:ControlsHelper.ContentCharacterCasing="Normal" ItemsSource="{Binding PortLookupResult}" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{DynamicResource String_Port}" Binding="{Binding Number}" Width="150" />
                        <DataGridTextColumn Header="{DynamicResource String_Protocol}" Binding="{Binding Protocol}" Width="100" />
                        <DataGridTextColumn Header="{DynamicResource String_Service}" Binding="{Binding Service}" Width="150" />
                        <DataGridTextColumn Header="{DynamicResource String_Description}" Binding="{Binding Description}" Width="*" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>
