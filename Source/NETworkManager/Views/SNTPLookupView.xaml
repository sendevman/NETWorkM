<UserControl x:Class="NETworkManager.Views.SNTPLookupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:network="clr-namespace:NETworkManager.Models.Network;assembly=NETworkManager.Models"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:controls="clr-namespace:NETworkManager.Controls;assembly=NETworkManager.Controls"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:SNTPLookupViewModel}">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
        <converters:DoubleToMillisecondsStringConverter x:Key="IntToMillisecondsStringConverter" />
        <converters:IntToSecondsStringConverter x:Key="IntToSecondsStringConverter" />
    </UserControl.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Style="{StaticResource ResourceKey=HeaderTextBlock}"
                   Text="{x:Static Member=localization:Strings.Query}" />
        <Grid Grid.Row="1" Margin="0,0,0,20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0"
                           Text="{x:Static Member=localization:Strings.SNTPServers}"
                           Style="{DynamicResource ResourceKey=DefaultTextBlock}"
                           VerticalAlignment="Center" />
                <ComboBox Grid.Column="2" Grid.Row="0"
                          ItemsSource="{Binding Path=SNTPServers}"
                          SelectedItem="{Binding Path=SNTPServer}"
                          DisplayMemberPath="Name" />
                <Button Grid.Column="4" Grid.Row="0"
                        Command="{Binding Path=QueryCommand}"
                        IsDefault="{Binding Path=IsRunning, Converter={StaticResource ResourceKey=BooleanReverseConverter}}"
                        HorizontalAlignment="Right">
                    <Button.Resources>
                        <Style TargetType="{x:Type TypeName=Button}"
                               BasedOn="{StaticResource ResourceKey=ImageWithTextButton}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Grid.Row="0">
                                <Rectangle.Resources>
                                    <VisualBrush x:Key="VisualMagnify" Stretch="Uniform"
                                                 Visual="{iconPacks:Material Kind=Magnify}" />
                                </Rectangle.Resources>
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type TypeName=Rectangle}"
                                           BasedOn="{StaticResource ResourceKey=ButtonWithImageRectangle}">
                                        <Setter Property="OpacityMask"
                                                Value="{StaticResource ResourceKey=VisualMagnify}" />
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Text="{x:Static Member=localization:Strings.Query}"
                                       Style="{StaticResource ResourceKey=ButtonWithImageTextBlock}" />
                        </Grid>
                    </Button.Content>
                </Button>
            </Grid>
            <mahAppsControls:MetroProgressBar Grid.Column="0" Grid.Row="1"
                                              Margin="0,10,0,0"
                                              Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"
                                              IsIndeterminate="True">
                <mahAppsControls:MetroProgressBar.Style>
                    <Style TargetType="{x:Type  TypeName=mahAppsControls:MetroProgressBar}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </mahAppsControls:MetroProgressBar.Style>
            </mahAppsControls:MetroProgressBar>
            <TextBlock Grid.Column="0" Grid.Row="2"
                       Foreground="{DynamicResource ResourceKey=MahApps.Brushes.Accent}"
                       Text="{Binding Path=StatusMessage}"
                       Visibility="{Binding Path=IsStatusMessageDisplayed, Converter={StaticResource ResourceKey=BooleanToVisibilityCollapsedConverter}}"
                       Style="{DynamicResource ResourceKey=StatusMessageTextBlock}"
                       Margin="0,10,0,0" />
        </Grid>
        <TextBlock Grid.Column="0" Grid.Row="2"
                   Text="{x:Static Member=localization:Strings.Result}"
                   Style="{StaticResource ResourceKey=HeaderTextBlock}" />
        <controls:MultiSelectDataGrid Grid.Column="0" Grid.Row="3"
                                      CanUserSortColumns="True"
                                      ItemsSource="{Binding Path=ResultsView}"
                                      SelectedItem="{Binding Path=SelectedResult}"
                                      SelectedItemsList="{Binding Path=SelectedResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <controls:MultiSelectDataGrid.Resources>
                <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static Member=localization:Strings.CopyDots}"
                              Style="{StaticResource ResourceKey=CopyMenuItem}">
                        <MenuItem Header="{x:Static Member=localization:Strings.Server}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.Server}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.IPEndPoint}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.IPEndPoint}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.NetworkTime}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.DateTime.NetworkTime, Converter={StaticResource ResourceKey=DateTimeToStringConverter}}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.LocalStartTime}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.DateTime.LocalStartTime, Converter={StaticResource ResourceKey=DateTimeToStringConverter}}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.LocalEndTime}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.DateTime.LocalEndTime, Converter={StaticResource ResourceKey=DateTimeToStringConverter}}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.Offset}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.DateTime.Offset, Converter={StaticResource ResourceKey=IntToSecondsStringConverter}}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                        <MenuItem Header="{x:Static Member=localization:Strings.RoundTripDelay}"
                                  Command="{Binding Path=CopyDataToClipboardCommand}"
                                  CommandParameter="{Binding Path=SelectedResult.DateTime.RoundTripDelay, Converter={StaticResource ResourceKey=IntToMillisecondsStringConverter}}"
                                  Style="{StaticResource ResourceKey=CopyMenuItem}" />
                    </MenuItem>
                    <MenuItem Header="{x:Static Member=localization:Strings.ExportDots}"
                              Command="{Binding Path=ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16"
                                       Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                <ContextMenu x:Key="MultiRowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                    <MenuItem Header="{x:Static Member=localization:Strings.ExportDots}"
                              Command="{Binding Path=ExportCommand}">
                        <MenuItem.Icon>
                            <Rectangle Width="16" Height="16"
                                       Fill="{DynamicResource ResourceKey=MahApps.Brushes.Gray3}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </controls:MultiSelectDataGrid.Resources>
            <controls:MultiSelectDataGrid.RowStyle>
                <Style TargetType="{x:Type TypeName=DataGridRow}"
                       BasedOn="{StaticResource ResourceKey=MahApps.Styles.DataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=MultiRowContextMenu}" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TypeName=DataGrid}}}"
                            Value="1">
                            <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=RowContextMenu}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:MultiSelectDataGrid.RowStyle>
            <controls:MultiSelectDataGrid.Columns>
                <DataGridTextColumn Header="{x:Static Member=localization:Strings.Server}"
                                    Binding="{Binding Path=(network:SNTPLookupInfo.Server)}"
                                    SortMemberPath="Server"
                                    MinWidth="150" />
                <DataGridTextColumn Header="{x:Static Member=localization:Strings.IPEndPoint}"
                                    Binding="{Binding Path=(network:SNTPLookupInfo.IPEndPoint)}"
                                    SortMemberPath="IPEndPoint"
                                    MinWidth="150" />
                <DataGridTextColumn Header="{x:Static Member=localization:Strings.NetworkTime}"
                                    Binding="{Binding Path=(network:SNTPLookupInfo.DateTime).NetworkTime, Converter={StaticResource ResourceKey=DateTimeToStringConverter}}"
                                    SortMemberPath="DateTime.NetworkTime"
                                    MinWidth="180" />
                <DataGridTextColumn Header="{x:Static Member=localization:Strings.LocalStartTime}"
                                    Binding="{Binding Path=(network:SNTPLookupInfo.DateTime).LocalStartTime, Converter={StaticResource ResourceKey=DateTimeToStringConverter}}"
                                    SortMemberPath="DateTime.LocalStartTime"
                                    MinWidth="180" />
                <DataGridTextColumn Header="{x:Static Member=localization:Strings.LocalEndTime}"
                                    Binding="{Binding Path=(network:SNTPLookupInfo.DateTime).LocalEndTime, Converter={StaticResource ResourceKey=DateTimeToStringConverter}}"
                                    SortMemberPath="DateTime.LocalEndTime"
                                    MinWidth="180" />
                <DataGridTextColumn Header="{x:Static Member=localization:Strings.Offset}"
                                    Binding="{Binding Path=(network:SNTPLookupInfo.DateTime).Offset, Converter={StaticResource ResourceKey=IntToSecondsStringConverter}}"
                                    SortMemberPath="DateTime.Offset"
                                    MinWidth="80" />
                <DataGridTextColumn Header="{x:Static Member=localization:Strings.RoundTripDelay}"
                                    Binding="{Binding Path=(network:SNTPLookupInfo.DateTime).RoundTripDelay, Converter={StaticResource ResourceKey=IntToMillisecondsStringConverter}}"
                                    SortMemberPath="DateTime.RoundTripDelay"
                                    MinWidth="80" />
            </controls:MultiSelectDataGrid.Columns>
        </controls:MultiSelectDataGrid>
    </Grid>
</UserControl>