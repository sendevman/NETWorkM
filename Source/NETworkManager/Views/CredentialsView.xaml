<UserControl x:Class="NETworkManager.Views.CredentialsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:converters="clr-namespace:NETworkManager.Converters"
        xmlns:networkManagerControls="clr-namespace:NETworkManager.Controls"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
        xmlns:settings="clr-namespace:NETworkManager.Models.Settings"
        xmlns:localization="clr-namespace:NETworkManager.Resources.Localization"
        dialogs:DialogParticipation.Register="{Binding}"
        Loaded="UserControl_Loaded"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:CredentialsViewModel}">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
    </UserControl.Resources>
    <Grid>
        <!-- Getting started / Set master password-->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}" >
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CredentialsFileExists}" Value="False" />
                                <Condition Binding="{Binding CredentialsLoaded}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <StackPanel VerticalAlignment="Center">
                <TextBlock Foreground="{DynamicResource GrayBrush3}" Text="{x:Static localization:Strings.CredentialsEncryptionDisclaimer}" TextWrapping="Wrap" TextAlignment="Center" Style="{StaticResource HeaderTextBlock}" />
                <Button HorizontalAlignment="Center" Command="{Binding SetMasterPasswordCommand}" Style="{StaticResource ImageWithTextButton}">
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Entypo Kind=Key}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.SetMasterPassword}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                        </Grid>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>
        <!-- Load/Unlock -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}" >
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CredentialsFileExists}" Value="True" />
                                <Condition Binding="{Binding CredentialsLoaded}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <StackPanel VerticalAlignment="Center">
                <TextBlock Foreground="{DynamicResource GrayBrush3}" Text="{x:Static localization:Strings.DecryptAndLoadCredentialsMessage}" TextWrapping="Wrap" TextAlignment="Center" Style="{StaticResource HeaderTextBlock}" />
                <Button HorizontalAlignment="Center" Command="{Binding DecryptAndLoadCommand}" Style="{StaticResource ImageWithTextButton}">
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=LockOpenOutline}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.DecryptAndLoadDots}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                        </Grid>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>
        <!-- Credentials -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}" >
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CredentialsLoaded}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="10" />
                <RowDefinition Height="*" />
                <RowDefinition Height="10" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Command="{Binding ChangeMasterPasswordCommand}" IsEnabled="{Binding IsLocked, Converter={StaticResource BooleanReverseConverter}}" Style="{StaticResource ImageWithTextButton}">
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Entypo Kind=Key}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.ChangeMasterPasswordDots}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                        </Grid>
                    </Button.Content>
                </Button>
                <TextBox x:Name="TextBoxSearch" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Width="250" Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SearchTextBox}" />
            </Grid>
            <networkManagerControls:MultiSelectDataGrid x:Name="DataGridCredentials" Grid.Row="2" EnableRowVirtualization="True" EnableColumnVirtualization="True" ScrollViewer.CanContentScroll="True" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsVirtualizingWhenGrouping="True" VirtualizingPanel.VirtualizationMode="Recycling" Style="{StaticResource MetroDataGrid}" FontSize="14" mah:ControlsHelper.ContentCharacterCasing="Normal" ItemsSource="{Binding Credentials}" SelectedItem="{Binding SelectedCredential}" SelectedItemsList="{Binding SelectedCredentials, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CanUserResizeColumns="False" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="false" IsReadOnly="True">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                    <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened"  MinWidth="150">
                        <MenuItem Header="{x:Static localization:Strings.EditDots}" Command="{Binding EditCommand}" IsEnabled="{Binding IsLocked, Converter={StaticResource BooleanReverseConverter}}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{x:Static localization:Strings.DeleteDots}" Command="{Binding DeleteCommand}" IsEnabled="{Binding IsLocked, Converter={StaticResource BooleanReverseConverter}}">
                            <MenuItem.Icon>
                                <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.Resources>
                <DataGrid.InputBindings>
                    <KeyBinding Command="{Binding EditCommand}" Key="F2" />
                    <KeyBinding Command="{Binding DeleteCommand}" Key="Delete" />
                </DataGrid.InputBindings>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                        <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="1" >
                                <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static localization:Strings.Name}" Binding="{Binding (settings:CredentialInfo.Name)}" SortMemberPath="Name" MinWidth="200" />
                    <DataGridTextColumn Header="{x:Static localization:Strings.Username}" Binding="{Binding (settings:CredentialInfo.Username)}" SortMemberPath="Username" MinWidth="200" />
                    <DataGridTextColumn Header="{x:Static localization:Strings.Password}" Binding="{Binding Source={x:Static localization:StaticStrings.HiddenPassword}, Path=.}" MinWidth="200" />
                </DataGrid.Columns>
            </networkManagerControls:MultiSelectDataGrid>
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Visibility="{Binding IsLocked, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Orientation="Horizontal" >
                    <Button Command="{Binding LockUnlockCommand}" Style="{StaticResource ImageButton}">
                        <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Entypo Kind=Lock}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <TextBlock Style="{StaticResource DefaultTextBlock}" Text="{x:Static localization:Strings.UserInterfaceLocked}" VerticalAlignment="Center" Margin="10,0,0,0" />
                </StackPanel>
                <StackPanel Grid.Column="0" Visibility="{Binding IsLocked, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}" Orientation="Horizontal" >
                    <Button Command="{Binding LockUnlockCommand}" Style="{StaticResource ImageButton}">
                        <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Entypo Kind=LockOpen}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <TextBlock Style="{StaticResource DefaultTextBlock}" VerticalAlignment="Center" Margin="10,0,0,0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}: {1}">
                                <Binding Source="{x:Static localization:Strings.RemainingTime}" Path="." />
                                <Binding Path="TimeRemaining" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
                <StackPanel Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Command="{Binding DeleteCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=DataGridCredentials, Path=SelectedItems.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.DeleteDots}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                            </Grid>
                        </Button.Content>
                    </Button>
                    <Button Command="{Binding EditCommand}" Margin="10,0,0,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=DataGridCredentials, Path=SelectedItems.Count}" Value="1" />
                                            <Condition Binding="{Binding IsLocked}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.EditDots}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                            </Grid>
                        </Button.Content>
                    </Button>
                    <Button Command="{Binding AddCommand}" Style="{StaticResource ImageWithTextButton}" IsEnabled="{Binding IsLocked, Converter={StaticResource BooleanReverseConverter}}" Margin="10,0,0,0">
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Fill="{DynamicResource GrayBrush3}" Margin="10,5,0,5">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.AddDots}" Style="{StaticResource DefaultTextBlock}" TextAlignment="Center" Margin="10,5" />
                            </Grid>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
