<UserControl x:Class="NETworkManager.Views.ConnectionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:NETworkManager.Converters;assembly=NETworkManager.Converters"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:network="clr-namespace:NETworkManager.Models.Network;assembly=NETworkManager.Models"
             xmlns:utilities="clr-namespace:NETworkManager.Utilities;assembly=NETworkManager.Utilities"
             xmlns:localization="clr-namespace:NETworkManager.Localization.Resources;assembly=NETworkManager.Localization"
             xmlns:controls="clr-namespace:NETworkManager.Controls;assembly=NETworkManager.Controls"
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:ConnectionsViewModel}">
    <UserControl.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
    </UserControl.InputBindings>
    <UserControl.Resources>
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:TcpStateToStringConverter x:Key="TcpStateToStringConverter" />
        <converters:TimeUnitToStringConverter x:Key="TimeUnitToStringConverter" />
    </UserControl.Resources>
    <TabControl Style="{StaticResource DefaultTabControl}">
        <TabItem Header="{x:Static localization:Strings.Connections}">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBox Grid.Column="0" Grid.Row="0"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Right"
                         Width="250"
                         Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource SearchTextBox}" />
                <controls:MultiSelectDataGrid Grid.Column="0" Grid.Row="2"
                                              ItemsSource="{Binding ResultsView}"
                                              SelectedItem="{Binding SelectedResult}"
                                              SelectedItemsList="{Binding SelectedResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Sorting="DataGrid_OnSorting">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource DataGridScrollBar}" />
                        <ContextMenu x:Key="RowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                            <MenuItem Header="{x:Static localization:Strings.CopyDots}"
                                      Style="{StaticResource ResourceKey=CopyMenuItem}">
                                <MenuItem Header="{x:Static Member=localization:Strings.Protocol}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.Protocol}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.LocalIPAddress}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.LocalIPAddress}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.LocalPort}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.LocalPort}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.RemoteIPAddress}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.RemoteIPAddress}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.RemotePort}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.RemotePort}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.RemoteHostname}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.RemoteHostname}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.State}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.TcpState, Converter={StaticResource TcpStateToStringConverter}}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.ProcessID}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.ProcessId}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.ProcessName}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.ProcessName}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                                <MenuItem Header="{x:Static Member=localization:Strings.ProcessPath}"
                                          Command="{Binding Path=CopyDataToClipboardCommand}"
                                          CommandParameter="{Binding Path=SelectedResult.ProcessPath}"
                                          Style="{StaticResource ResourceKey=CopyMenuItem}" />
                            </MenuItem>
                            <MenuItem Header="{x:Static localization:Strings.ExportDots}"
                                      Command="{Binding ExportCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                        <ContextMenu x:Key="MultiRowContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                            <MenuItem Header="{x:Static localization:Strings.ExportDots}"
                                      Command="{Binding ExportCommand}">
                                <MenuItem.Icon>
                                    <Rectangle Width="16" Height="16" Fill="{DynamicResource MahApps.Brushes.Gray3}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Export}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                            <Setter Property="ContextMenu" Value="{StaticResource MultiRowContextMenu}" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                                    Value="1">
                                    <Setter Property="ContextMenu" Value="{StaticResource RowContextMenu}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.Protocol}"
                                            Binding="{Binding Path=(network:ConnectionInfo.Protocol)}"
                                            SortMemberPath="Protocol" MinWidth="100" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.LocalIPAddress}"
                                            Binding="{Binding Path=(network:ConnectionInfo.LocalIPAddress)}"
                                            SortMemberPath="LocalIPAddress" MinWidth="150" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.LocalPort}"
                                            Binding="{Binding Path=(network:ConnectionInfo.LocalPort)}"
                                            SortMemberPath="LocalPort" MinWidth="100" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.RemoteIPAddress}"
                                            Binding="{Binding Path=(network:ConnectionInfo.RemoteIPAddress)}"
                                            SortMemberPath="RemoteIPAddress" MinWidth="150" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.RemotePort}"
                                            Binding="{Binding Path=(network:ConnectionInfo.RemotePort)}"
                                            SortMemberPath="RemotePort" MinWidth="100" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.RemoteHostname}"
                                            Binding="{Binding Path=(network:ConnectionInfo.RemoteHostname)}"
                                            SortMemberPath="RemoteHostname" MinWidth="100" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.State}"
                                            Binding="{Binding Path=(network:ConnectionInfo.TcpState), Converter={StaticResource ResourceKey=TcpStateToStringConverter}}"
                                            SortMemberPath="TcpState" MinWidth="150" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.ProcessID}"
                                            Binding="{Binding Path=(network:ConnectionInfo.ProcessId)}"
                                            SortMemberPath="ProcessId" MinWidth="150" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.ProcessName}"
                                            Binding="{Binding Path=(network:ConnectionInfo.ProcessName)}"
                                            SortMemberPath="ProcessName" MinWidth="150" />
                        <DataGridTextColumn Header="{x:Static Member=localization:Strings.ProcessPath}"
                                            Binding="{Binding Path=(network:ConnectionInfo.ProcessPath)}"
                                            SortMemberPath="ProcessPath" MinWidth="150" />
                    </DataGrid.Columns>
                </controls:MultiSelectDataGrid>
                <TextBlock Grid.Row="3" Foreground="{DynamicResource MahApps.Brushes.Accent}"
                           Text="{Binding StatusMessage}"
                           Visibility="{Binding IsStatusMessageDisplayed, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                           Style="{DynamicResource StatusMessageTextBlock}" Margin="0,10,0,0" />
                <mahAppsControls:MetroProgressBar Grid.Row="4" Margin="0,10,0,0"
                                                  Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                  IsIndeterminate="True">
                    <mahAppsControls:MetroProgressBar.Style>
                        <Style TargetType="{x:Type  mahAppsControls:MetroProgressBar}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRefreshing}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </mahAppsControls:MetroProgressBar.Style>
                </mahAppsControls:MetroProgressBar>
                <Grid Grid.Column="0" Grid.Row="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <WrapPanel Grid.Column="2" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center"
                               HorizontalAlignment="Right">
                        <CheckBox IsChecked="{Binding AutoRefreshEnabled}"
                                  Content="{x:Static localization:Strings.AutomaticallyUpdateEvery}" Margin="0,0,10,0" />
                        <ComboBox ItemsSource="{Binding AutoRefreshTimes}"
                                  SelectedItem="{Binding SelectedAutoRefreshTime}" MinWidth="150">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="utilities:AutoRefreshTimeInfo">
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} {1}">
                                                <Binding Path="Value" />
                                                <Binding Path="TimeUnit"
                                                         Converter="{StaticResource TimeUnitToStringConverter}" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </WrapPanel>
                    <Button Grid.Column="4" Grid.Row="0" Command="{Binding RefreshCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRefreshing}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AutoRefreshEnabled}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Style="{StaticResource ButtonWithImageRectangle}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Refresh}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.Refresh}"
                                           Style="{StaticResource ButtonWithImageTextBlock}" />
                            </Grid>
                        </Button.Content>
                    </Button>
                </Grid>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>