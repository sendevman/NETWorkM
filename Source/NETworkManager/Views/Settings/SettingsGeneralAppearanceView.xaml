<UserControl x:Class="NETworkManager.Views.Settings.SettingsGeneralAppearanceView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Converter="clr-namespace:NETworkManager.Converters"
        xmlns:Validator="clr-namespace:NETworkManager.Validators"
        xmlns:metro="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d">
    <UserControl.Resources>
        <!-- Converters -->
        <Converter:AppThemeToBrushConverter x:Key="AppThemeToBrushConverter" />
        <Converter:AppThemeToStringConverter x:Key="AppThemeToStringConverter" />
        <Converter:AccentToBrushConverter x:Key="AccentToBrushConverter" />
        <Converter:AccentToStringConverter x:Key="AccentToStringConverter" />
    </UserControl.Resources>
    <StackPanel>
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{DynamicResource String_Header_Theme}"  />
        <ListView  ItemsSource="{x:Static metro:ThemeManager.AppThemes}" VerticalAlignment="Top" BorderThickness="0" Margin="0,0,0,20" SelectionMode="Single" >
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Rectangle Width="48" Height="48" Margin="-1,2" Fill="{Binding Converter={StaticResource AppThemeToBrushConverter}, ConverterParameter='Name'}" ToolTip="{Binding Converter={StaticResource AppThemeToStringConverter}, ConverterParameter='Name'}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}" ItemWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}"  ItemHeight="{Binding (ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}}" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.SelectedItem>
                <Binding Path="AppThemeSelectedItem" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
            </ListView.SelectedItem>
        </ListView>
        <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{DynamicResource String_Header_Accent}" />
        <ListView ItemsSource="{x:Static metro:ThemeManager.Accents}" BorderThickness="0" SelectionMode="Single" Margin="0,0,0,20">
            <ListView.ItemTemplate>
                <DataTemplate >
                    <Rectangle Width="48" Height="48" Margin="-1,2" Fill="{Binding Converter={StaticResource AccentToBrushConverter}, ConverterParameter='Name'}" ToolTip="{Binding Converter={StaticResource AccentToStringConverter}, ConverterParameter='Name'}"  />
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}" ItemWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}" ItemHeight="{Binding (ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}}" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.SelectedItem>
                <Binding Path="AccentSelectedItem" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
            </ListView.SelectedItem>
        </ListView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Style="{StaticResource HeaderTextBlock}" Text="{DynamicResource String_Header_Transparency}" />
            <Rectangle Grid.Column="2" Width="24" Height="24" ToolTip="{DynamicResource String_WarnMessage_SettingsGeneralAppearanceTransparency}" Style="{StaticResource WarnImageRectangle}">
                <Rectangle.Resources>
                    <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource WarnToolTip}" />
                </Rectangle.Resources>
            </Rectangle>
        </Grid>
        <mah:ToggleSwitch Header="{DynamicResource String_EnableTransparency}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding EnableTransparency}" Margin="0,0,0,10"/>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Slider Grid.Column="0" Minimum="10" MaxHeight="100" Value="{Binding Opacity}" IsEnabled="{Binding EnableTransparency}" Style="{DynamicResource FlatSlider}" ToolTip="{Binding Value, RelativeSource={RelativeSource Self}}" TickFrequency="1" IsSnapToTickEnabled="True" />
            <TextBox Grid.Column="1" Width="80" IsEnabled="{Binding EnableTransparency}" Style="{StaticResource DefaultTextBox}" TextAlignment="Center" Margin="10,0,0,0">
                <TextBox.Text>
                    <Binding Path="Opacity" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <Validator:EmptyValidator ValidatesOnTargetUpdated="True" />
                            <Validator:OpacityTextboxValidator ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
    </StackPanel>
</UserControl>
