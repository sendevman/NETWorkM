<Controls:MetroWindow x:Name="MetroWindowSettings" x:Class="NETworkManager.Views.Settings.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Validator="clr-namespace:NETworkManager.Validators"
        xmlns:Converter="clr-namespace:NETworkManager.Converters"
        xmlns:Settings ="clr-namespace:NETworkManager.Views.Settings"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:metro="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"                      
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Dialog:DialogParticipation.Register="{Binding}"
        mc:Ignorable="d"
        Title="{DynamicResource String_Settings}" TitleAlignment="Center" TitleCaps="False" Height="450" Width="650" MinHeight="450" MinWidth="650" ResizeMode="NoResize"  BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}" Closing="MetroWindow_Closing" WindowStartupLocation="CenterOwner" IsMinButtonEnabled="False" IsMaxRestoreButtonEnabled="False" PreviewKeyDown="MetroWindowSettings_PreviewKeyDown" ShowInTaskbar="False" >
    <Controls:MetroWindow.WindowButtonCommands>
        <Controls:WindowButtonCommands Template="{DynamicResource MahApps.Metro.Templates.WindowButtonCommands.Win10}" />
    </Controls:MetroWindow.WindowButtonCommands>
    <Controls:MetroWindow.Resources>
        <!-- Converter -->
        <Converter:AppThemeToBrushConverter x:Key="AppThemeToBrushConverter" />
        <Converter:AppThemeToStringConverter x:Key="AppThemeToStringConverter" />
        <Converter:AccentToBrushConverter x:Key="AccentToBrushConverter" />
        <Converter:AccentToStringConverter x:Key="AccentToStringConverter" />
        <Converter:IsDefaultSettingsLocationToBoolConverter x:Key="IsDefaultSettingsLocationToBoolConverter" />
        <Converter:IsSettingsLocationToBoolConverter x:Key="IsSettingsLocationToBoolConverter" />
        <!-- Style -->
        <Style x:Key="SettingsContentScrollViewerStyle" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MetroScrollViewer}">
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="PanningMode" Value="VerticalOnly" />
        </Style>
    </Controls:MetroWindow.Resources>
    <Grid>
        <TabControl Style="{StaticResource DefaultTabControl}" Padding="0">
            <!-- Application -->
            <TabItem Header="{DynamicResource String_Settings}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" BorderBrush="{DynamicResource GrayBrush8}" BorderThickness="0,0,1,0">
                        <ListBox Background="Transparent" Name="listBoxSettings" ItemsSource="{x:Static Settings:SettingsView.List}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Grid.Column="0" Width="20" Height="20" Margin="10,0">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{Binding Icon}" />
                                            </Rectangle.OpacityMask>
                                            <Rectangle.Style>
                                                <Style TargetType="{x:Type Rectangle}">
                                                    <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                                            <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Rectangle.Style>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1" Text="{Binding TranslatedName}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush3}" />
                                                    <Setter Property="Margin" Value="0,0,10,0" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="FontSize" Value="14" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" >
                                                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border Background="Transparent" BorderThickness="0">
                                                    <Grid MinHeight="30">
                                                        <ContentPresenter />
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>                            
                        </ListBox>
                    </Border>
                    <TabControl Grid.Column="1" SelectedIndex="{Binding ElementName=listBoxSettings, Path=SelectedIndex}">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MetroTabItem}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </TabControl.Resources>
                        <!-- General -->
                        <TabItem>
                            <ScrollViewer Style="{StaticResource SettingsContentScrollViewerStyle}">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollViewerScrollBar}" />
                                </ScrollViewer.Resources>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_DefaultApplication}"/>
                                    <TextBlock Text="{DynamicResource String_ShowTheFollowingApplicationOnStartup}" Style="{DynamicResource DefaultTextBlock}" VerticalAlignment="Center" Margin="0,0,0,10" />
                                    <ComboBox FontSize="14" ItemsSource="{Binding ApplicationViewCollection}" DisplayMemberPath="TranslatedName" SelectedItem="{Binding DefaultApplicationViewSelectedItem}" Width="250" HorizontalAlignment="Left"  Margin="0,0,0,20"/>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Window}" />
                                    <Controls:ToggleSwitch Header="{DynamicResource String_StartMaximized}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding StartMaximized}" Margin="0,0,0,10" />
                                    <Controls:ToggleSwitch Header="{DynamicResource String_MinimizeInsteadOfTerminating}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding MinimizeInsteadOfTerminating}" Margin="0,0,0,10" />
                                    <Controls:ToggleSwitch Header="{DynamicResource String_MinimizeToTrayInsteadOfTaskbar}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding MinimizeToTrayInsteadOfTaskbar}" Margin="0,0,0,10" />
                                    <Controls:ToggleSwitch Header="{DynamicResource String_ConfirmClose}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding ConfirmClose}" Margin="0,0,0,20"/>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Tray}" />
                                    <Controls:ToggleSwitch Header="{DynamicResource String_AlwaysShowIconInTray}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding AlwaysShowIconInTray}" />
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <!-- Appearance -->
                        <TabItem>
                            <ScrollViewer Style="{StaticResource SettingsContentScrollViewerStyle}">
                                <StackPanel>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Theme}"  />
                                    <ListView  ItemsSource="{x:Static metro:ThemeManager.AppThemes}" VerticalAlignment="Top" BorderThickness="0" Margin="0,0,0,20" SelectionMode="Single" >
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Rectangle Width="48" Height="48" Margin="-1,2" Fill="{Binding Converter={StaticResource AppThemeToBrushConverter}, ConverterParameter='Name'}" ToolTip="{Binding Converter={StaticResource AppThemeToStringConverter}, ConverterParameter='Name'}"/>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"                                                        ItemWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}"                                                        MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"                                                        ItemHeight="{Binding (ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.SelectedItem>
                                            <Binding Path="AppThemeSelectedItem" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                                        </ListView.SelectedItem>
                                    </ListView>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Accent}" />
                                    <ListView ItemsSource="{x:Static metro:ThemeManager.Accents}" BorderThickness="0" SelectionMode="Single">
                                        <ListView.ItemTemplate>
                                            <DataTemplate >
                                                <Rectangle Width="48" Height="48" Margin="-1,2" Fill="{Binding Converter={StaticResource AccentToBrushConverter}, ConverterParameter='Name'}"                                                        ToolTip="{Binding Converter={StaticResource AccentToStringConverter}, ConverterParameter='Name'}"  />
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"                                                        ItemWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}" MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"            ItemHeight="{Binding (ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.SelectedItem>
                                            <Binding Path="AccentSelectedItem" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                                        </ListView.SelectedItem>
                                    </ListView>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <!-- Language -->
                        <TabItem>
                            <ScrollViewer Style="{StaticResource SettingsContentScrollViewerStyle}">
                                <StackPanel>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Language}" />
                                    <ListView ItemsSource="{Binding LanguageCollection}" SelectedItem="{Binding LocalizationSelectedItem}" Background="Transparent" BorderThickness="0" SelectionMode="Single">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="48" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Image Grid.Column="0" Width="48" Height="48" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Icon}" />
                                                    <StackPanel Grid.Column="1" Margin="10,5,0,5" Orientation="Vertical">
                                                        <TextBlock Text="{Binding Name}" FontWeight="Bold" Style="{StaticResource DefaultTextBlock}" />
                                                        <TextBlock Text="{Binding Translator}" Style="{StaticResource DefaultTextBlock}" />
                                                    </StackPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <!-- Hotkeys -->
                        <TabItem>
                            <ScrollViewer Style="{StaticResource SettingsContentScrollViewerStyle}">
                                <StackPanel>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_HotKeys}" />
                                    <Controls:ToggleSwitch Header="{DynamicResource String_UntrayBringWindowToFront}" IsChecked="{Binding HotKeyShowWindowEnabled}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" Margin="0,0,0,10"/>
                                    <Controls:HotKeyBox AreModifierKeysRequired="True" HotKey="{Binding HotKeyShowWindow}" Width="250" HorizontalAlignment="Left" />
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <!-- Autostart -->
                        <TabItem>
                            <ScrollViewer Style="{StaticResource SettingsContentScrollViewerStyle}">
                                <StackPanel>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Autostart}" />
                                    <StackPanel>
                                        <Controls:ToggleSwitch Header="{DynamicResource String_StartWithWindows}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding StartWithWindows}" Margin="0,0,0,10"/>
                                        <Controls:ToggleSwitch Header="{DynamicResource String_StartMinimizedInTray}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding StartMinimizedInTray}" />
                                    </StackPanel>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <!-- Settings -->
                        <TabItem>
                            <ScrollViewer Style="{StaticResource SettingsContentScrollViewerStyle}">
                                <StackPanel >
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Location}" />
                                    <TextBox x:Name="txtSettingsLocation" mah:TextBoxHelper.Watermark="{DynamicResource String_Watermark_EnterLocation}" mah:TextBoxHelper.ButtonCommand="{Binding BrowseFolderCommand}" Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}" Margin="0,0,0,10">
                                        <TextBox.Text>
                                            <Binding Path="SettingsLocationSelectedPath" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <Validator:EmptyFieldValidator ValidatesOnTargetUpdated="True" />
                                                    <Validator:FolderExistsValidator ValidatesOnTargetUpdated="True" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BrowseFolderTextBox}">
                                                <Setter Property="IsEnabled" Value="True" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=toggleSwitchSettingsPortable,Path=IsChecked}" Value="True" >
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"  Margin="0,0,0,20">
                                        <Button Content="{DynamicResource String_Button_Default}" Command="{Binding RestoreDefaultSettingsLocationCommand}" Margin="0,0,10,0">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=toggleSwitchSettingsPortable,Path=IsChecked}" Value="False" >
                                                            <Setter Property="IsEnabled" Value="True" />
                                                        </DataTrigger>
                                                        <DataTrigger Value="False">
                                                            <DataTrigger.Binding>
                                                                <Binding Converter="{StaticResource IsDefaultSettingsLocationToBoolConverter}" ElementName="txtSettingsLocation" Path="Text"/>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button x:Name="btnChangeSettingsLocation" Content="{DynamicResource String_Button_Change}" Command="{Binding ChangeSettingsCommand}">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding ElementName=toggleSwitchSettingsPortable, Path=IsChecked}" Value="False" />
                                                                <Condition Binding="{Binding ElementName=txtSettingsLocation, Path=(Validation.HasError)}" Value="False" />
                                                                <Condition Binding="{Binding ElementName=txtSettingsLocation, Path=Text, Converter={StaticResource IsSettingsLocationToBoolConverter}}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="True" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_Portable}" />
                                    <Controls:ToggleSwitch x:Name="toggleSwitchSettingsPortable" Header="{DynamicResource String_SaveSettingsInApplicationFolder}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding SettingsPortable}" />
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <!-- Developer -->
                        <TabItem>
                            <ScrollViewer Style="{StaticResource SettingsContentScrollViewerStyle}">
                                <StackPanel>
                                    <TextBlock Style="{StaticResource DefaultTextBlockStyle}" Text="{DynamicResource String_Header_DeveloperMode}" />
                                    <Controls:ToggleSwitch Header="{DynamicResource String_EnableDeveloperMode}" OnLabel="{DynamicResource String_ToggleSwitch_On}" OffLabel="{DynamicResource String_ToggleSwitch_Off}" IsChecked="{Binding DeveloperMode}" Margin="0,0,0,10" />
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <!-- About -->
            <TabItem Header="{DynamicResource String_Header_About}">
                <StackPanel Margin="10">
                    <Grid Margin="0,0,0,20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Grid.Row="0" Width="128" Height="128" Source="/Resources/Images/NETworkManager_128x128.png" />
                        <StackPanel Grid.Column="1" Margin="20,0,0,0">
                            <TextBlock FontSize="32" Grid.Row="0" Text="{DynamicResource String_ProductName}" Style="{StaticResource DefaultTextBlockStyle}" />
                            <TextBlock Text="{Binding Version}" Style="{StaticResource DefaultTextBlock}" Margin="0,0,0,5" FontWeight="Bold" />
                            <TextBlock Text="{Binding CopyrightAndAuthor}" Style="{StaticResource DefaultTextBlock}" Margin="0,0,0,5"/>
                            <TextBlock Text="{DynamicResource String_AllRightReserved}" Style="{StaticResource DefaultTextBlock}" />
                        </StackPanel>
                    </Grid>
                    <TextBlock Text="{DynamicResource String_Libraries}" Style="{StaticResource DefaultTextBlockStyle}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{DynamicResource String_Libary_MahAppsMetroName}" Style="{StaticResource LinkTextBlock}">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding OpenWebsiteLibaryMahAppsMetroCommand}" MouseAction="LeftClick" />
                            </TextBlock.InputBindings>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="0" Text="{DynamicResource String_Libary_MahAppsMetroDescription}" Style="{StaticResource InputTextBlock}" />
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="{DynamicResource String_Libary_MahAppsMetroIconPacksName}" Style="{StaticResource LinkTextBlock}">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding OpenWebsiteLibaryMahAppsMetroIconPacksCommand}" MouseAction="LeftClick" />
                            </TextBlock.InputBindings>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="2" Text="{DynamicResource String_Libary_MahAppsMetroIconPacksDescription}" Style="{StaticResource InputTextBlock}" />
                    </Grid>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Controls:MetroWindow>
