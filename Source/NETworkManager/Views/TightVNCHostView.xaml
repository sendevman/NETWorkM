<UserControl x:Class="NETworkManager.Views.TightVNCHostView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:converters="clr-namespace:NETworkManager.Converters"
        xmlns:settings="clr-namespace:NETworkManager.Models.Settings"
        xmlns:airspaceFixer="clr-namespace:AirspaceFixer;assembly=AirspaceFixer"
        xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
        xmlns:localization="clr-namespace:NETworkManager.Resources.Localization"
        xmlns:controls="clr-namespace:NETworkManager.Controls"
             xmlns:wpfHelper="clr-namespace:NETworkManager.WpfHelper"
             dialogs:DialogParticipation.Register="{Binding}"
        Loaded="UserControl_Loaded"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:TightVNCHostViewModel}">
    <UserControl.Resources>
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:NullOrEmptyToBoolConverter x:Key="NullOrEmptyToBoolConverter" />
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="T" Modifiers="Ctrl" Command="{Binding ConnectCommand}" />
    </UserControl.InputBindings>
    <Grid>
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsTightVNCConfigured}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=IsTransparencyEnabled}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="40" Width="{Binding ProfileWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxWidth="350" />
            </Grid.ColumnDefinitions>
            <airspaceFixer:AirspacePanel Grid.Column="0" Grid.Row="0" FixAirspace="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=IsDialogOpen}">
                <dragablz:TabablzControl ClosingItemCallback="{Binding CloseItemCommand}" ItemsSource="{Binding TabItems}" SelectedIndex="{Binding SelectedTabIndex}" Visibility="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=IsDialogOpen, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                    <dragablz:TabablzControl.Resources>
                        <wpfHelper:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
                    </dragablz:TabablzControl.Resources>
                    <dragablz:TabablzControl.InterTabController>
                        <dragablz:InterTabController InterTabClient="{Binding InterTabClient}" MoveWindowWithSolitaryTabs="False" x:Name="InterTabController" />
                    </dragablz:TabablzControl.InterTabController>
                    <dragablz:TabablzControl.HeaderSuffixContent>
                        <Grid HorizontalAlignment="Right" Width="40" Height="44">
                            <Button Style="{StaticResource CleanButton}" Command="{Binding ConnectCommand}" ToolTip="{x:Static localization:Strings.NewConnectionDots}" Focusable="False">
                                <Rectangle Width="20" Height="20">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{iconPacks:Material Kind=Plus}" />
                                    </Rectangle.OpacityMask>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </Button>
                        </Grid>
                    </dragablz:TabablzControl.HeaderSuffixContent>
                </dragablz:TabablzControl>
            </airspaceFixer:AirspacePanel>
            <Grid Grid.Column="0" VerticalAlignment="Center">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabItems.Count}" Value="0">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <StackPanel>
                    <Button HorizontalAlignment="Center" Focusable="False" Command="{Binding ConnectCommand}" ToolTip="{x:Static localization:Strings.NewConnectionDots}" Style="{StaticResource CleanButton}" Margin="0,0,0,10">
                        <Rectangle Width="20" Height="20">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{iconPacks:Material Kind=Plus}" />
                            </Rectangle.OpacityMask>
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </Button>
                    <TextBlock Text="{x:Static localization:Strings.AddATabToOpenANewConnection}" Style="{StaticResource MessageTextBlock}" />
                </StackPanel>
            </Grid>
            <GridSplitter Grid.Column="1" Style="{StaticResource ProfileGridSplitter}" />
            <Expander Grid.Column="2" Header="{x:Static localization:Strings.Profiles}" Style="{StaticResource RightExpander}" IsExpanded="{Binding ExpandProfileView}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBox x:Name="TextBoxSearch" Grid.Column="0" VerticalAlignment="Center" Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SearchTextBox}"/>
                    <ListBox Grid.Row="2" ItemsSource="{Binding Profiles}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedProfile}" Style="{StaticResource ProfileListBox}">
                        <ListBox.Resources>
                            <ContextMenu x:Key="ListBoxItemContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                                <MenuItem Header="{x:Static localization:Strings.Connect}" Command="{Binding ConnectProfileCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=EyeOutline}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{x:Static localization:Strings.ConnectExternal}" Command="{Binding ConnectProfileExternalCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=EyeOutline}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{x:Static localization:Strings.EditDots}" Command="{Binding EditProfileCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{x:Static localization:Strings.CopyAsDots}" Command="{Binding CopyAsProfileCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentDuplicate}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{x:Static localization:Strings.Delete}" Command="{Binding DeleteProfileCommand}">
                                    <MenuItem.Icon>
                                        <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListBox.Resources>
                        <ListBox.InputBindings>
                            <KeyBinding Command="{Binding EditProfileCommand}" Key="F2" />
                            <KeyBinding Command="{Binding DeleteProfileCommand}" Key="Delete" />
                        </ListBox.InputBindings>
                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Expander IsExpanded="True" Style="{StaticResource DefaultExpander}">
                                                        <Expander.Header>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" Text="{Binding (CollectionViewGroup.Name)}" Style="{DynamicResource DefaultTextBlock}"/>
                                                                <Button Grid.Column="1" ToolTip="{x:Static localization:Strings.EditGroup}" Command="{Binding DataContext.EditGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding (CollectionViewGroup.Name)}" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Style="{StaticResource CleanButton}">
                                                                    <Rectangle Width="16" Height="16">
                                                                        <Rectangle.OpacityMask>
                                                                            <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                                                        </Rectangle.OpacityMask>
                                                                        <Rectangle.Style>
                                                                            <Style TargetType="{x:Type Rectangle}">
                                                                                <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                                                        <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Rectangle.Style>
                                                                    </Rectangle>
                                                                </Button>
                                                            </Grid>
                                                        </Expander.Header>
                                                        <ItemsPresenter />
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </ListBox.GroupStyle>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MetroListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ListBoxItemContextMenu}" />
                                <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                    <Grid Grid.Row="2" VerticalAlignment="Center">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Profiles.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <StackPanel>
                            <Button HorizontalAlignment="Center" Focusable="False" Margin="0,0,0,10">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CleanButton}">
                                        <Setter Property="Command" Value="{Binding AddProfileCommand}" />
                                        <Setter Property="ToolTip" Value="{x:Static localization:Strings.AddProfileDots}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Search, Converter={StaticResource NullOrEmptyToBoolConverter}}" Value="False">
                                                <Setter Property="Command" Value="{Binding ClearSearchCommand}" />
                                                <Setter Property="ToolTip" Value="{x:Static localization:Strings.ClearFilter}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Rectangle Width="20" Height="20">
                                    <Rectangle.Resources>
                                        <VisualBrush x:Key="VisualPlus" Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}"/>
                                        <VisualBrush x:Key="VisualClear" Stretch="Uniform" Visual="{iconPacks:Material Kind=FilterRemoveOutline}" />
                                    </Rectangle.Resources>
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="OpacityMask" Value="{StaticResource VisualPlus}" />
                                            <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Search, Converter={StaticResource NullOrEmptyToBoolConverter}}" Value="False">
                                                    <Setter Property="OpacityMask" Value="{StaticResource VisualClear}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </Button>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MessageTextBlock}">
                                        <Setter Property="Text" Value="{x:Static localization:Strings.NoProfilesFoundCreateOne}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Search, Converter={StaticResource NullOrEmptyToBoolConverter}}" Value="False">
                                                <Setter Property="Text" Value="{x:Static localization:Strings.NothingFound}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                    <Button Grid.Row="4" Command="{Binding AddProfileCommand}" Style="{StaticResource ImageWithTextButton}">
                        <Button.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.AddProfileDots}" FontSize="14" Margin="10,5" TextAlignment="Center" />
                            </Grid>
                        </Button.Content>
                    </Button>
                </Grid>
            </Expander>
        </Grid>
        <StackPanel VerticalAlignment="Center" Margin="10">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsTightVNCConfigured}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=IsTransparencyEnabled}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock Text="{x:Static localization:Strings.ConfigureThePathToTightVNCInTheSettingsDots}" Style="{StaticResource MessageTextBlock}" Margin="0,0,0,10" />
            <Button HorizontalAlignment="Center" Command="{Binding OpenSettingsCommand}" Style="{StaticResource ImageWithTextButton}">
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=Cog}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.OpenSettings}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                    </Grid>
                </Button.Content>
            </Button>
        </StackPanel>
        <StackPanel VerticalAlignment="Center" Visibility="{Binding Source={x:Static settings:ConfigurationManager.Current}, Path=IsTransparencyEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Margin="10">
            <TextBlock Text="{x:Static localization:Strings.DisableTransparencyInTheSettingsToUseTightVNC}" Style="{StaticResource MessageTextBlock}" Margin="0,0,0,10" />
            <Button HorizontalAlignment="Center" Command="{Binding OpenSettingsCommand}" Style="{StaticResource ImageWithTextButton}">
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="20" Height="20" Margin="10,5,0,5" Fill="{DynamicResource GrayBrush3}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:MaterialLight Kind=Cog}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="{x:Static localization:Strings.OpenSettings}" FontSize="14" Margin="10,5" TextAlignment="Center"/>
                    </Grid>
                </Button.Content>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>

